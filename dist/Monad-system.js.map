{"version":3,"sources":["../src/main/typescript/Monad.ts"],"names":[],"mappings":"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","file":"Monad-system.js","sourcesContent":["/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A module which keeps  basic monadish like definitions in place without any sidedependencies to other modules.\n * Useful if you need the functions in another library to keep its dependencies down\n */\nexport module Monadish {\n    /*IMonad definitions*/\n\n    /**\n     * IFunctor interface,\n     * defines an interface which allows to map a functor\n     * via a first order function to another functor\n     */\n    export interface IFunctor<T> {\n        map<R>(fn: (data: T) => R): IFunctor<R>;\n    }\n\n    /**\n     * IMonad definition, basically a functor with a flaptmap implementation (flatmap reduces all nested monads after a\n     * function call f into a monad with the nesting level of 1\n     *\n     * flatmap flats nested Monads into a IMonad of the deepest nested implementation\n     */\n    export interface IMonad<T, M extends IMonad<any, any>> extends IFunctor<T> {\n        flatMap<T, M>(f: (T) => M): IMonad<any, any>;\n    }\n\n    /**\n     * a stateful functor which holds a value upn which a\n     * function can be applied\n     *\n     * as value holder of type T\n     */\n    export interface IIdentity<T> extends IFunctor<T> {\n        readonly value: T;\n    }\n\n    /**\n     *  custom value holder definition, since we are not pure functional\n     *  but iterative we have structures which allow the assignment of a value\n     *  also not all structures are sideffect free\n     */\n    export interface IValueHolder<T> {\n        value: T;\n    }\n\n    /**\n     * Implementation of a monad\n     * (Sideffect free), no write allowed directly on the monads\n     * value state\n     */\n    export class Monad<T> implements IMonad<T, Monad<any>> {\n        protected _value: T;\n\n        constructor(value: T) {\n            this._value = value;\n        }\n\n        map<R>(fn?: (data: T) => R): Monad<R> {\n            if (!fn) {\n                fn = (inval: any) => <R>inval;\n            }\n            let result: R = fn(this.value);\n            return new Monad(result);\n        }\n\n        flatMap<R>(fn?: (data: T) => R): Monad<any> {\n            let mapped: Monad<any> = this.map(fn);\n            while (\"undefined\" != typeof mapped && mapped != null && mapped.value instanceof Monad) {\n                mapped = mapped.value\n            }\n            return mapped;\n        }\n\n\n        get value(): T {\n            return this._value;\n        }\n\n    }\n\n\n    /**\n     * optional implementation, an optional is basically an implementation of a Monad with additional syntactic\n     * sugar on top\n     * (Sideeffect free, since value assignment is not allowed)\n     * */\n    export class Optional<T> extends Monad<T> {\n\n\n        constructor(value: T) {\n            super(value);\n        }\n\n        static fromNullable<T>(value?: T): Optional<T> {\n            return new Optional(value);\n        }\n\n        /*default value for absent*/\n        static absent = Optional.fromNullable(null);\n\n        /*syntactic sugar for absent and present checks*/\n        isAbsent(): boolean {\n            return \"undefined\" == typeof this.value || null == this.value;\n        }\n\n        isPresent(): boolean {\n            return !this.isAbsent();\n        }\n\n        presentOrElse(elseValue: any): Optional<any> {\n            if(this.isPresent()) {\n                return this;\n            } else {\n                return this.flatMap(this.getClass().fromNullable(elseValue));\n            }\n        }\n\n        /*\n         * we need to implement it to fullfill the contract, although it is used only internally\n         * all values are flattened when accessed anyway, so there is no need to call this methiod\n         */\n        flatMap<R>(fn?: (data: T) => R): Optional<any> {\n            var val = super.flatMap(fn);\n            if (!(val instanceof Optional)) {\n                return Optional.fromNullable(val.value);\n            }\n            return <Optional<any>> val.flatMap();\n        }\n\n        /**\n         * additional syntactic sugar which is not part of the usual optional implementation\n         * but makes life easier, if you want to sacrifice typesafety and refactoring\n         * capabilities in typescript\n         */\n        private getIfPresent<R>(key: string): Optional<R> {\n            if (this.isAbsent()) {\n                return this.getClass().absent;\n            }\n            return this.getClass().fromNullable(this.value[key]).flatMap();\n        }\n\n\n\n\n        /*\n         * elvis operation, take care, if you use this you lose typesafety and refactoring\n         * capabilites, unfortunately typesceript does not allow to have its own elvis operator\n         * this is some syntactic sugar however which is quite useful*/\n        getIf<R>(...key: string[]): Optional<R> {\n\n            let currentPos: Optional<any> = this;\n            for (let cnt = 0; cnt < key.length; cnt++) {\n                let currKey = this.keyVal(key[cnt]);\n                let arrPos = this.arrayIndex(key[cnt]);\n\n                if(currKey === \"\" && arrPos >= 0) {\n                    currentPos = this.getClass().fromNullable(!(currentPos.value instanceof Array ) ? null : (currentPos.value.length < arrPos ? null : currentPos.value[arrPos]));\n                    if (currentPos.isAbsent()) {\n                        return currentPos;\n                    }\n                    continue;\n                } else  if(currKey && arrPos >= 0) {\n                    if(currentPos.getIfPresent(currKey).isAbsent()) {\n                        return currentPos;\n                    }\n                    currentPos = (currentPos.getIfPresent(currKey).value instanceof Array) ? this.getClass().fromNullable(currentPos.getIfPresent(currKey).value[arrPos]) : this.getClass().absent;\n                    if (currentPos.isAbsent()) {\n                        return currentPos;\n                    }\n                    continue;\n\n                } else {\n                    currentPos = currentPos.getIfPresent(currKey);\n                }\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                } else if(arrPos > -1) {\n                    currentPos = this.getClass().fromNullable(currentPos.value[arrPos]);\n                }\n            }\n            let retVal = currentPos;\n\n            return retVal;\n        }\n\n        get value(): T {\n            if(this._value instanceof Monad) {\n                return this._value.flatMap().value\n            }\n            return this._value;\n        }\n\n        /**\n         * convenience function to flatmap the internal value\n         * and replace it with a default in case of being absent\n         *\n         * @param defaultVal\n         * @returns {Optional<any>}\n         */\n        get<R>(defaultVal: any): Optional<R> {\n            if(this.isAbsent()) {\n                return this.getClass().fromNullable(defaultVal).flatMap();\n            }\n\n            return this.getClass().fromNullable(this.value).flatMap();\n        }\n\n        /**\n         * helper to override several implementations in a more fluent way\n         * by having a getClass operation we can avoid direct calls into the constructor or\n         * static methods and do not have to implement several methods which rely on the type\n         * of \"this\"\n         * @returns {Monadish.Optional}\n         */\n        protected getClass(): any {\n            return Optional;\n        }\n\n        toJson():string {\n            return JSON.stringify(this.value);\n        }\n\n        /*helper method for getIf with array access aka <name>[<indexPos>]*/\n        protected arrayIndex(key: string): number {\n            let start = key.indexOf(\"[\");\n            let end = key.indexOf(\"]\");\n            if(start >= 0 && end > 0 && start < end) {\n                return parseInt(key.substring(start+1, end));\n            } else {\n                return -1;\n            }\n        }\n\n        /*helper method for getIf with array access aka <name>[<indexPos>]*/\n        protected keyVal(key: string): string {\n            let start = key.indexOf(\"[\");\n\n            if(start >= 0) {\n                return key.substring(0, start);\n            } else {\n                return key;\n            }\n        }\n\n\n    }\n\n\n    /**\n     * helper class to allow write access to the config\n     * in certain situations (after an apply call)\n     */\n    class ConfigEntry<T> implements IValueHolder<T>{\n        rootElem: any;\n        key: any;\n        arrPos: number;\n\n\n        constructor(rootElem: any, key: any, arrPos?:number) {\n            this.rootElem = rootElem;\n            this.key = key;\n            this.arrPos = (\"undefined\" != typeof arrPos) ? arrPos : -1;\n        }\n\n        get value() {\n            if(this.key == \"\" && this.arrPos >= 0) {\n                return this.rootElem[this.arrPos];\n            } else  if(this.key  && this.arrPos >= 0) {\n                return this.rootElem[this.key][this.arrPos];\n            }\n            return this.rootElem[this.key];\n        }\n\n        set value(val: T) {\n            if(this.key == \"\" && this.arrPos >= 0) {\n                this.rootElem[this.arrPos] = val;\n                return;\n            } else if(this.key && this.arrPos >= 0) {\n                this.rootElem[this.key][this.arrPos] = val;\n                return;\n            }\n            this.rootElem[this.key] = val;\n        }\n    }\n\n    /**\n     * Config, basically an optional wrapper for a json structure\n     * (not sideeffect free, since we can alter the internal config state\n     * without generating a new config), not sure if we should make it sideffect free\n     * since this would swallow a lot of performane and ram\n     */\n    export class Config extends Optional<any> {\n        constructor(root: any) {\n            super(root);\n        }\n\n        static fromNullable<T>(value?: any): Config {\n            return new Config(value);\n        }\n\n        apply(...keys: Array<any>): IValueHolder<any> {\n            if(keys.length < 1) {\n                return;\n            }\n\n            this.buildPath(keys);\n\n            let currKey = this.keyVal(keys[keys.length-1]);\n            let arrPos = this.arrayIndex(keys[keys.length-1]);\n            var retVal = new ConfigEntry(keys.length == 1 ? this.value : this.getIf.apply(this, keys.slice(0, keys.length -1)).value,\n                currKey, arrPos\n            );\n\n            return retVal;\n        }\n\n\n        getIf(...keys: Array<string>): Config {\n            return this.getClass().fromNullable(super.getIf.apply(this, keys).value);\n        }\n\n        get(defaultVal: any): Config {\n            return this.getClass().fromNullable(super.get(defaultVal).value);\n        }\n\n        toJson(): any {\n            return JSON.stringify(this.value);\n        }\n\n        protected getClass(): any {\n            return Config;\n        }\n\n        private setVal(val: any) {\n            this._value = val;\n        }\n\n        private buildPath(keys: Array<any>): Config {\n            let val = this;\n            let parentVal = this.getClass().fromNullable(null);\n            let parentPos = -1;\n            let alloc = function(arr: Array<any>, length: number) {\n                if(arr.length < length) {\n                    for(var cnt = arr.length; cnt < length; cnt++) {\n                        arr.push({});\n                    }\n                }\n            };\n\n\n            for(var cnt = 0; cnt < keys.length; cnt++) {\n                let currKey = this.keyVal(keys[cnt]);\n                let arrPos = this.arrayIndex(keys[cnt]);\n\n                if(currKey === \"\" && arrPos >= 0) {\n\n                    val.setVal((val.value instanceof Array) ? val.value : []);\n                    alloc(val.value, arrPos+1);\n                    if(parentPos >= 0) {\n                        parentVal.value[parentPos] = val.value;\n                    }\n                    parentVal = val;\n                    parentPos = arrPos;\n                    val = this.getClass().fromNullable(val.value[arrPos]);\n                    continue;\n                }\n\n                let tempVal = <Config> val.getIf(currKey);\n                if(arrPos == -1) {\n                    if(tempVal.isAbsent()) {\n                        tempVal = <Config> this.getClass().fromNullable(val.value[currKey] = {});\n                    } else {\n                        val = <any>tempVal;\n                    }\n                } else {\n                    var arr = (tempVal.value instanceof Array) ? tempVal.value : [];\n                    alloc(arr, arrPos+1);\n                    val.value[currKey] = arr;\n                    tempVal = this.getClass().fromNullable(arr[arrPos]);\n                }\n                parentVal = val;\n                parentPos = arrPos;\n                val = <any>tempVal;\n            }\n\n            return this;\n        }\n    }\n\n\n    export enum PromiseStatus {\n        PENDING, FULLFILLED, REJECTED\n    }\n\n    export interface IPromise {\n        then(executorFunc: (val: any) => any): IPromise;\n        catch(executorFunc: (val: any) => any): IPromise\n        finally(executorFunc: () => void): IPromise;\n\n    }\n\n    /**\n     * a small (probably not 100% correct, although I tried to be correct as possible) Promise implementation\n     * for systems which do not have a promise implemented\n     * Note, although an internal state is kept, this is sideffect free since\n     * is value is a function to operate on, hence no real state is kept internally, except for the then\n     * and catch calling order\n     */\n    export class Promise implements IPromise {\n\n        private value: (resolve: (val?: any) => void, reject: (val?: any) => void) => void;\n\n        status = PromiseStatus.PENDING;\n\n        protected allFuncs: Array<any> = [];\n\n        constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void) => void) {\n            //super(executor);\n            this.value = executor;\n            this.value((data: any) => this.resolve(data), (data: any) => this.reject(data));\n        }\n\n        static all(...promises: Array<IPromise>): IPromise {\n\n            var promiseCnt = 0;\n            var myapply: Function;\n\n            var myPromise = new Promise((apply: Function, reject: Function) => {\n                myapply = apply;\n            });\n            var executor = () => {\n                promiseCnt++;\n\n                if (promises.length == promiseCnt) {\n                    myapply();\n                }\n            };\n            (<any>executor).__last__ = true;\n\n            for (var cnt = 0; cnt < promises.length; cnt++) {\n                promises[cnt].finally(executor);\n            }\n            return myPromise;\n        }\n\n\n        static race(...promises: Array<IPromise>): IPromise {\n\n            var promiseCnt = 0;\n            var myapply: Function;\n            var myreject: Function;\n\n            var myPromise = new Promise((apply: Function, reject: Function) => {\n                myapply = apply;\n                myreject = reject;\n            });\n\n\n            var thenexecutor = (): IPromise => {\n                if (!!myapply) {\n                    myapply();\n                }\n                myapply = null;\n                myreject = null;\n                return null;\n            };\n            (<any>thenexecutor).__last__ = true;\n\n            var catchexeutor = (): IPromise => {\n                if (!!myreject) {\n                    myreject();\n                }\n                myreject = null;\n                myapply = null;\n                return null;\n            };\n            (<any>catchexeutor).__last__ = true;\n\n            for (var cnt = 0; cnt < promises.length; cnt++) {\n                promises[cnt].then(thenexecutor);\n                promises[cnt].catch(catchexeutor);\n            }\n            return myPromise;\n        }\n\n        static reject(reason: any): Promise {\n            var retVal = new Promise((resolve: any, reject: any) => {\n                //not really doable without a hack\n                if (reason instanceof Promise) {\n                    reason.then((val: any) => {\n                        reject(val);\n                    });\n                } else {\n                    setTimeout(() => {\n                        reject(reason);\n                    }, 1);\n                }\n            });\n\n            return retVal;\n        }\n\n        static resolve(reason: any): Promise {\n            var retVal = new Promise((resolve: any, reject: any) => {\n                //not really doable without a hack\n                if (reason instanceof Promise) {\n                    reason.then((val) => resolve(val));\n                } else {\n                    setTimeout(() => {\n                        resolve(reason);\n                    }, 1);\n                }\n            });\n\n            return retVal;\n\n        }\n\n        then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): Promise {\n            this.allFuncs.push({\"then\": executorFunc});\n            if (catchfunc) {\n                this.allFuncs.push({\"catch\": catchfunc});\n            }\n            this.spliceLastFuncs();\n            return this;\n        }\n\n        catch(executorFunc: (val?: any) => void): Promise {\n            this.allFuncs.push({\"catch\": executorFunc});\n            this.spliceLastFuncs();\n            return this;\n        }\n\n\n        finally(executorFunc: () => void): Promise {\n            if ((<any>this).__reason__) {\n                (<any>this).__reason__.finally(executorFunc);\n                return;\n            }\n\n            this.allFuncs.push({\"finally\": executorFunc});\n            this.spliceLastFuncs();\n            return this;\n        }\n\n        private spliceLastFuncs() {\n            let lastFuncs = [];\n            let rest = [];\n            for (var cnt = 0; cnt < this.allFuncs.length; cnt++) {\n                for (var key in this.allFuncs[cnt]) {\n                    if (this.allFuncs[cnt][key].__last__) {\n                        lastFuncs.push(this.allFuncs[cnt]);\n                    } else {\n                        rest.push(this.allFuncs[cnt]);\n                    }\n                }\n            }\n            this.allFuncs = rest.concat(lastFuncs);\n        }\n\n\n        protected resolve(val?: any) {\n\n\n            while (this.allFuncs.length) {\n                if (!this.allFuncs[0].then) {\n                    break;\n                }\n                var fn = this.allFuncs.shift();\n\n                var funcResult = Optional.fromNullable(fn.then(val));\n\n                if (funcResult.isPresent()) {\n                    funcResult = funcResult.flatMap();\n                    val = funcResult.value;\n                    if (val instanceof Promise) {\n                        //var func = (newVal: any) => {this.resolve(newVal)};\n                        //func.__last__  = true;\n                        //val.then(func);\n                        this.transferIntoNewPromise(val);\n\n                        return;\n                    }\n                } else {\n                    break;\n                }\n            }\n\n            this.appyFinally();\n            this.status = PromiseStatus.FULLFILLED;\n        }\n\n        protected reject(val?: any) {\n\n            while (this.allFuncs.length) {\n                if (this.allFuncs[0].finally) {\n                    break;\n                }\n                var fn = this.allFuncs.shift();\n                if (fn.catch) {\n                    var funcResult = Optional.fromNullable(fn.catch(val));\n                    if (funcResult.isPresent()) {\n                        funcResult = funcResult.flatMap();\n                        val = funcResult.value;\n                        if (val instanceof Promise) {\n                            //val.then((newVal: any) => {this.resolve(newVal)});\n                            this.transferIntoNewPromise(val);\n                            return;\n                        }\n                        this.status = PromiseStatus.REJECTED;\n                        break;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            this.status = PromiseStatus.REJECTED;\n            this.appyFinally();\n        }\n\n        private transferIntoNewPromise(val: any) {\n            for (var cnt = 0; cnt < this.allFuncs.length; cnt++) {\n                for (let key in this.allFuncs[cnt]) {\n                    val[key](this.allFuncs[cnt][key]);\n                }\n            }\n        }\n\n        protected appyFinally() {\n            while (this.allFuncs.length) {\n                var fn = this.allFuncs.shift();\n                if (fn.finally) {\n                    fn.finally();\n                }\n            }\n        }\n    }\n\n    /**\n     * a cancellable promise\n     * a Promise with a cancel function, which can be cancellend any time\n     * this is useful for promises which use cancellable asynchronous operations\n     * note, even in a cancel state, the finally of the promise is executed, however\n     * subsequent thens are not anymore.\n     * The current then however is fished or a catch is called depending on how the outer\n     * operation reacts to a cancel order.\n     */\n    export class CancellablePromise extends Promise {\n\n        private cancellator = () => {};\n\n        /**\n         * @param executor asynchronous callback operation which triggers the callback\n         * @param cancellator cancel operation, separate from the trigger operation\n         */\n        constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void)  => void, cancellator:() => void) {\n            super(executor);\n            this.cancellator = cancellator;\n        }\n\n        cancel() {\n            this.status = PromiseStatus.REJECTED;\n            this.appyFinally();\n            //lets terminate it once and for all, the finally has been applied\n            this.allFuncs = [];\n        }\n\n\n        then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): CancellablePromise {\n            return <CancellablePromise> super.then(executorFunc, catchfunc);\n        }\n\n        catch(executorFunc: (val?: any) => void): CancellablePromise {\n            return <CancellablePromise> super.catch(executorFunc);\n        }\n\n        finally(executorFunc: () => void): CancellablePromise {\n            return <CancellablePromise> super.finally(executorFunc);\n        }\n    }\n    /*we do not implenent array, maps etc.. monads there are libraries like lodash which have been doing that for ages*/\n}\n\n//we also add a global handler for systems without module loader\n(<any>window).Monadish = Monadish;"]}