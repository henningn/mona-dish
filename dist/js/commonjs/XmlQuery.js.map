{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Monad.ts","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Stream.ts","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Lang.ts","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Promise.ts","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/SourcesCollectors.ts","webpack:///./node_modules/assert/assert.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/DomQuery.ts","webpack:///src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/XmlQuery.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","_value","map","fn","inval","Monad","flatMap","mapped","fromNullable","Optional","isAbsent","isPresent","presentRunnable","absent","ifPresentLazy","orElse","elseValue","orElseLazy","func","val","getIf","currentPos","cnt","length","currKey","keyVal","arrPos","arrayIndex","getClass","Array","getIfPresent","match","defaultVal","toJson","JSON","stringify","start","indexOf","end","parseInt","substring","resolve","resolver","e","rootElem","valueKey","newVal","alternative","ValueEmbedder","_limits","pos","of","Stream","data","ofAssoc","keys","ofDataSource","dataSource","hasNext","push","next","limits","onElem","each","res","item","ret","strmR","isArray","concat","filter","reduce","startVal","offset","val1","first","last","Math","min","anyMatch","allMatch","matches","noneMatch","sort","comparator","newArr","slice","collect","collector","finalValue","isLimitsReached","isEndOfArray","reset","parent","LazyStream","ArrayStreamDataSource","values","ofStreamDataSource","isOverLimits","nextFilter","max","MappedStreamDataSource","el","stop","FilteredStreamDatasource","FlatMapStreamDataSource","value1","value2","el1","el2","arr","ArrayCollector","rootData","Lang","trim","str","ws","replace","test","charAt","isString","it","arguments","String","saveResolve","resolverProducer","defaultValue","result","saveResolveLazy","strToArray","splitter","split","forEach","element","objToArray","obj","pack","equalsIgnoreCase","source","destination","finalDest","toLowerCase","timeout","handler","CancellablePromise","apply","reject","setTimeout","clearTimeout","interval","setInterval","clearInterval","assertType","probe","theType","deepCopy","theObject","parse","workPos","lastRet","assert","TinyValueHolder","isFunc","Function","PromiseStatus","executor","status","PENDING","allFuncs","all","myapply","promiseCnt","myPromise","Promise","promises","__last__","finally","race","myreject","thenexecutor","catchexeutor","then","catch","reason","executorFunc","catchfunc","spliceLastFuncs","__reason__","shift","funcResult","transferIntoNewPromise","appyFinally","FULLFILLED","REJECTED","lastFuncs","rest","cancellator","cancel","dataPos","filterFunc","filteredNext","inputDataSource","mapFunc","resolveCurrentNext","resolveNextNext","activeDataSource","AssocArrayCollector","FormData","append","FormDataCollector","toMerge","encodeFormElement","QueryFormDataCollector","formData","join","item1","item2","QueryFormStringCollector","objectAssign","compare","a","b","x","y","len","isBuffer","global","Buffer","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","toString","isView","arrbuf","ArrayBuffer","DataView","buffer","ok","regex","getName","isFunction","truncate","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","Error","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","self","generatedMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","g","window","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","assign","test1","getOwnPropertyNames","test2","fromCharCode","test3","letter","shouldUseNative","target","from","symbols","to","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","objects","args","Number","_","isNull","isObject","deprecate","msg","process","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","constructor","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","arrayToHash","formatError","RegExp","Date","output","base","braces","toUTCString","formatProperty","formatArray","pop","prev","cur","numLinesEst","reduceToSingleString","desc","set","line","substr","ar","arg","re","objectToString","pad","debuglog","env","NODE_DEBUG","toUpperCase","pid","isNullOrUndefined","isSymbol","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","origin","add","kCustomPromisifiedSymbol","undefined","callbackifyOnRejected","cb","newReason","promisify","original","writable","configurable","promiseResolve","promiseReject","promise","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","getAttribute","setAttribute","ElementAttribute","DEFAULT_JSF_WHITELIST","src","rootNode","foundElement","DomQuery","querySelectorAll","getAsElem","allElems","isTag","tagName","nodeName","checked","newChecked","eachElem","stream","formElement","elements","DomQueryCollector","attr","disabled","removeAttribute","childNodeArr","childNodes","asArray","selector","document","byId","byTagName","globalEval","code","nonce","fromMarkup","markup","domParser","DOMParser","parseFromString","doc","implementation","createHTMLDocument","lowerMarkup","includes","documentElement","innerHTML","body","index","defaults","delete","node","parentNode","removeChild","nodes","id","includeRoot","hasClass","clazz","hasIt","oldClass","oldClasses","found","addClass","removeClass","newClasses","isMultipartCandidate","firstElem","html","innerHtml","retArr","elem","inVal","_mozMatchesSelector","toMatch","prot","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","filterSelector","matched","selectorStage","nodeSelector","reArr","head","getElementsByTagName","script","createElement","type","newScriptElement","appendChild","detach","appendTo","theItem","loadScriptEval","defer","charSet","xhr","XMLHttpRequest","open","setRequestHeader","send","onload","responseData","responseText","onerror","insertAfter","existingItem","existingElement","nextSibling","toInsertParams","insertElem","insertBefore","parents","retSet","Set","lowerTagName","resolveItem","has","copyAttrs","sourceItem","sourceNode","attrs","attributes","resolveAttributeHolder","attrName","outerHTML","runEmbeddedScripts","runEmbeddedCss","toReplace","firstInsert","replaced","replaceChild","insertAdditionalItems","runScripts","runCss","whilteListed","finalScripts","equi","execScrpt","itemType","evalText","text","innerText","go","scriptElements","description","applyStyle","newSS","styleSheet","sheet","cssText","createTextNode","execCss","click","fireEvent","addEventListener","listener","removeEventListener","eventName","nodeType","dispatchEvent","eventClass","createEvent","initEvent","synthetic","event","createEventObject","textContent","joinstr","text1","text2","isConfigurable","elemType","selectElem","selectedIndex","uLen","u","selected","elementOption","files","inputValue","reduced","subNodes","DQ","docType","xml","parser","ActiveXObject","async","contentType","loadXML","isXMLParserError","XMLSerializer","serializeToString","parserErrorText","parseXML","txt","XMLQuery","parseHTML","fromString","parseType","XQ"],"mappings":"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","file":"XmlQuery.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A module which keeps  basic monadish like definitions in place without any sidedependencies to other modules.\n * Useful if you need the functions in another library to keep its dependencies down\n */\n\n/*IMonad definitions*/\n\nimport {IMonad, IOptional, IValueEmbedder, IValueHolder} from \"./Types\";\n\nexport class Monad<T> implements IMonad<T, Monad<any>>, IValueHolder<T> {\n    constructor(value: T) {\n        this._value = value;\n    }\n\n    protected _value: T;\n\n    get value(): T {\n        return this._value;\n    }\n\n    map<R>(fn?: (data: T) => R): Monad<R> {\n        if (!fn) {\n            fn = (inval: any) => <R>inval;\n        }\n        let result: R = fn(this.value);\n        return new Monad(result);\n    }\n\n    flatMap<R>(fn?: (data: T) => R): Monad<any> {\n        let mapped: Monad<any> = this.map(fn);\n        while (mapped?.value instanceof Monad) {\n            mapped = mapped.value\n        }\n        return mapped;\n    }\n\n}\n\n\n/**\n * optional implementation, an optional is basically an implementation of a Monad with additional syntactic\n * sugar on top\n * (Sideeffect free, since value assignment is not allowed)\n * */\nexport class Optional<T> extends Monad<T> implements IOptional<T> {\n\n    /*default value for absent*/\n    static absent: IOptional<any> = Optional.fromNullable(null);\n\n    constructor(value: T) {\n        super(value);\n    }\n\n    get value(): T {\n        if (this._value instanceof Monad) {\n            return this._value.flatMap().value\n        }\n        return this._value;\n    }\n\n    static fromNullable<T>(value?: T): IOptional<T> {\n        return new Optional(value);\n    }\n\n    /*syntactic sugar for absent and present checks*/\n    isAbsent(): boolean {\n        return \"undefined\" == typeof this.value || null == this.value;\n    }\n\n    /**\n     * any value present\n     */\n    isPresent(presentRunnable ?: (val ?: IMonad<T, any>) => void): boolean {\n        let absent = this.isAbsent();\n        if (!absent && presentRunnable) {\n            presentRunnable.call(this, this)\n        }\n        return !absent;\n    }\n\n    ifPresentLazy(presentRunnable: (val ?: Monad<T>) => void = () => {\n    }): IMonad<T, any> {\n        this.isPresent.call(this, presentRunnable);\n        return this;\n    }\n\n    orElse(elseValue: any): IOptional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            //shortcut\n            if (elseValue == null) {\n                return Optional.absent;\n            }\n            return this.flatMap(() => elseValue);\n        }\n    }\n\n    /**\n     * lazy, passes a function which then is lazily evaluated\n     * instead of a direct value\n     * @param func\n     */\n    orElseLazy(func: () => any): IOptional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            return this.flatMap(func);\n        }\n    }\n\n    /*\n     * we need to implement it to fullfill the contract, although it is used only internally\n     * all values are flattened when accessed anyway, so there is no need to call this methiod\n     */\n    flatMap<R>(fn?: (data: T) => R): Optional<any> {\n        let val = super.flatMap(fn);\n        if (!(val instanceof Optional)) {\n            return <any> Optional.fromNullable(val.value);\n        }\n\n        return <Optional<any>> val.flatMap();\n    }\n\n    /*\n     * elvis operation, take care, if you use this you lose typesafety and refactoring\n     * capabilites, unfortunately typesceript does not allow to have its own elvis operator\n     * this is some syntactic sugar however which is quite useful*/\n    getIf<R>(...key: string[]): IOptional<R> {\n\n        let currentPos: Optional<any> = this;\n        for (let cnt = 0; cnt < key.length; cnt++) {\n            let currKey = this.keyVal(key[cnt]);\n            let arrPos = this.arrayIndex(key[cnt]);\n\n            if (currKey === \"\" && arrPos >= 0) {\n                currentPos = this.getClass().fromNullable(!(currentPos.value instanceof Array) ? null : (currentPos.value.length < arrPos ? null : currentPos.value[arrPos]));\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                }\n                continue;\n            } else if (currKey && arrPos >= 0) {\n                if (currentPos.getIfPresent(currKey).isAbsent()) {\n                    return currentPos;\n                }\n                currentPos = (currentPos.getIfPresent(currKey).value instanceof Array) ? this.getClass().fromNullable(currentPos.getIfPresent(currKey).value[arrPos]) : this.getClass().absent;\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                }\n                continue;\n\n            } else {\n                currentPos = currentPos.getIfPresent(currKey);\n            }\n            if (currentPos.isAbsent()) {\n                return currentPos;\n            } else if (arrPos > -1) {\n                currentPos = this.getClass().fromNullable(currentPos.value[arrPos]);\n            }\n        }\n        let retVal = currentPos;\n\n        return retVal;\n    }\n\n    /**\n     * simple match, if the first order function call returns\n     * true then there is a match, if the value is not present\n     * it never matches\n     *\n     * @param fn the first order function performing the match\n     */\n    match(fn: (item: T) => boolean): boolean {\n        if (this.isAbsent()) {\n            return false\n        }\n        return fn(this.value);\n    }\n\n    /**\n     * convenience function to flatmap the internal value\n     * and replace it with a default in case of being absent\n     *\n     * @param defaultVal\n     * @returns {Optional<any>}\n     */\n    get<R>(defaultVal: any = Optional.absent): Optional<R> {\n        if (this.isAbsent()) {\n            return this.getClass().fromNullable(defaultVal).flatMap();\n        }\n\n        return this.getClass().fromNullable(this.value).flatMap();\n    }\n\n    toJson(): string {\n        return JSON.stringify(this.value);\n    }\n\n    /**\n     * helper to override several implementations in a more fluent way\n     * by having a getClass operation we can avoid direct calls into the constructor or\n     * static methods and do not have to implement several methods which rely on the type\n     * of \"this\"\n     * @returns {Monadish.Optional}\n     */\n    getClass(): any {\n        return Optional;\n    }\n\n    /*helper method for getIf with array access aka <name>[<indexPos>]*/\n    arrayIndex(key: string): number {\n        let start = key.indexOf(\"[\");\n        let end = key.indexOf(\"]\");\n        if (start >= 0 && end > 0 && start < end) {\n            return parseInt(key.substring(start + 1, end));\n        } else {\n            return -1;\n        }\n    }\n\n    /*helper method for getIf with array access aka <name>[<indexPos>]*/\n    keyVal(key: string): string {\n        let start = key.indexOf(\"[\");\n\n        if (start >= 0) {\n            return key.substring(0, start);\n        } else {\n            return key;\n        }\n    }\n\n    /**\n     * additional syntactic sugar which is not part of the usual optional implementation\n     * but makes life easier, if you want to sacrifice typesafety and refactoring\n     * capabilities in typescript\n     */\n    getIfPresent<R>(key: string): Optional<R> {\n        if (this.isAbsent()) {\n            return this.getClass().absent;\n        }\n        return this.getClass().fromNullable(this.value[key]).flatMap();\n    }\n\n    /**\n     * elvis like typesafe functional save resolver\n     * a typesafe option for getIfPresent\n     *\n     * usage myOptional.resolve(value => value.subAttr.subAttr2).orElseLazy(....)\n     * if this is resolvable without any errors an Optional with the value is returned\n     * if not, then an Optional absent is returned, also if you return Optional absent\n     * it is flatmapped into absent\n     *\n     * @param resolver the resolver function, can throw any arbitrary errors, int  the error case\n     * the resolution goes towards absent\n     */\n    resolve<V>(resolver: (item: T) => V): IOptional<V> {\n        if (this.isAbsent()) {\n            return Optional.absent;\n        }\n        try {\n            return Optional.fromNullable(resolver(this.value))\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n}\n\n\n// --------------------- From here onwards we break out the sideffects free limits ------------\n\n\n\n\n/**\n * ValueEmbedder is the writeable version\n * of optional, it basically is a wrappber\n * around a construct which has a state\n * and can be written to.\n *\n * For the readonly version see Optional\n */\nexport class ValueEmbedder<T> extends Optional<T> implements IValueEmbedder<T> {\n\n    /*default value for absent*/\n    static absent =  ValueEmbedder.fromNullable(null);\n\n    protected key: string;\n\n    constructor(rootElem: any, valueKey: string = \"value\") {\n        super(rootElem);\n\n        this.key = valueKey;\n    }\n\n    get value(): T {\n        return this._value ? <T>this._value[this.key] : null;\n    }\n\n    set value(newVal: T) {\n        if(!this._value) {\n            return;\n        }\n        this._value[this.key] = newVal\n    }\n\n    orElse(elseValue: any): Optional<any> {\n        let alternative = {};\n        alternative[this.key] = elseValue;\n        return this.isPresent() ? this : new ValueEmbedder(alternative, this.key);\n    }\n\n    orElseLazy(func: () => any): Optional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            let alternative = {};\n            alternative[this.key] = func();\n            return new ValueEmbedder(alternative, this.key);\n        }\n    }\n\n    /**\n     * helper to override several implementations in a more fluent way\n     * by having a getClass operation we can avoid direct calls into the constructor or\n     * static methods and do not have to implement several methods which rely on the type\n     * of \"this\"\n     * @returns {Monadish.Optional}\n     */\n    getClass(): any {\n        return ValueEmbedder;\n    }\n\n    static fromNullable<T>(value?: any, valueKey: string = \"value\"): ValueEmbedder<T> {\n        return new ValueEmbedder(value, valueKey);\n    }\n}\n\n\n\n\n\n","/*\n * A small stream implementation\n */\nimport {Optional} from \"./Monad\";\nimport {\n    ArrayCollector,\n    ArrayStreamDataSource,\n    FilteredStreamDatasource, FlatMapStreamDataSource,\n    MappedStreamDataSource\n} from \"./SourcesCollectors\";\nimport {\n    IMonad, IValueHolder, ICollector,\n    IStreamDataSource, IOptional,\n} from \"./Types\";\n\n/*\n * some typedefs to make the code more reabable\n */\nexport type StreamMapper<T> = (data: T) => IStreamDataSource<any>;\nexport type ArrayMapper<T> = (data: T) => Array<any>;\nexport type IteratableConsumer<T> = (data: T, pos ?: number) => void | boolean;\nexport type Reducable<T> = (val1: T, val2: T) => T;\nexport type Matchable<T> = (data: T) => boolean;\nexport type Mappable<T, R> = (data: T) => R;\nexport type Comparator<T> = (el1: T, el2: T) => number;\n\n/**\n * Generic interface defining a stream\n */\nexport interface IStream<T> {\n    /**\n     * Perform the operation fn on a single element in the stream at a time\n     * then pass the stream over for further processing\n     * This is basically an intermediate point in the stream\n     * with further processing happening later, do not use\n     * this method to gather data or iterate over all date for processing\n     * (for the second case each has to be used)\n     *\n     * @param fn the processing function, if it returns false, further processing is stopped\n     */\n    onElem(fn: IteratableConsumer<T>): IStream<T>;\n\n    /**\n     * Iterate over all elements in the stream and do some processing via fn\n     *\n     * @param fn takes a single element and if it returns false\n     * then further processing is stopped\n     */\n    each(fn: IteratableConsumer<T>): void;\n\n    /**\n     * maps a single element into another via fn\n     * @param fn function which takes one element in and returns another\n     */\n    map<R>(fn?: Mappable<T, R>): IStream<R>;\n\n    /**\n     * Takes an element in and returns a set of something\n     * the set then is flatted into a single stream to be further processed\n     *\n     * @param fn\n     */\n    flatMap<R>(fn?: StreamMapper<T> | ArrayMapper<T>): IStream<R>;\n\n    /**\n     * filtering, takes an element in and is processed by fn.\n     * If it returns false then further processing on this element is skipped\n     * if it returns true it is passed down the chain.\n     *\n     * @param fn\n     */\n    filter(fn?: Matchable<T>): IStream<T>;\n\n    /**\n     * functional reduce... takes two elements in the stream and reduces to\n     * one from left to right\n     *\n     * @param fn the reduction function for instance (val1,val2) => val1l+val2\n     * @param startVal an optional starting value, if provided the the processing starts with this element\n     * and further goes down into the stream, if not, then the first two elements are taken as reduction starting point\n     */\n    reduce(fn: Reducable<T>, startVal: T): IOptional<T>;\n\n    /**\n     * returns the first element in the stream is given as Optional\n     */\n    first(): IOptional<T>;\n\n    /**\n     * Returns the last stream element (note in endless streams without filtering and limiting you will never reach that\n     * point hence producing an endless loop)\n     */\n    last(): IOptional<T>;\n\n    /**\n     * returns true if there is at least one element where a call fn(element) produces true\n     *\n     * @param fn\n     */\n    anyMatch(fn: Matchable<T>): boolean;\n\n    /**\n     * returns true if all elmements produce true on a call to fn(element)\n     *\n     * @param fn\n     */\n    allMatch(fn: Matchable<T>): boolean;\n\n    /**\n     * returns true if no elmements produce true on a call to fn(element)\n     *\n     * @param fn\n     */\n    noneMatch(fn: Matchable<T>): boolean;\n\n    /**\n     * Collect the elements with a collector given\n     * There are a number of collectors provided\n     *\n     * @param collector\n     */\n    collect(collector: ICollector<T, any>): any;\n\n    /**\n     * sort on the stream, this is a special case\n     * of an endpoint, so your data which is fed in needs\n     * to be limited otherwise it will fail\n     * it still returns a stream for further processing\n     *\n     * @param comparator\n     */\n    sort(comparator: Comparator<T>): IStream<T>;\n\n    /**\n     * Limits the stream to a certain number of elements\n     *\n     * @param end the limit of the stream\n     */\n    limits(end: number): IStream<T>;\n\n    /**\n     * returns the stream collected into an array (90% use-case abbreviation\n     */\n    value: Array<T>;\n}\n\n/**\n * A simple typescript based reimplementation of streams\n *\n * This is the early eval version\n * for a lazy eval version check, LazyStream, which is api compatible\n * to this implementation, however with the benefit of being able\n * to provide infinite data sources and generic data providers, the downside\n * is, it might be a tad slower in some situations\n */\nexport class Stream<T> implements IMonad<T, Stream<any>>, IValueHolder<Array<T>>, IStream<T> {\n\n    value: Array<T>;\n    _limits = -1;\n\n    private pos = -1;\n\n    constructor(...value: T[]) {\n        this.value = value;\n    }\n\n    static of<T>(...data: Array<T>): Stream<T> {\n        return new Stream<T>(...data);\n    }\n\n    static ofAssoc<T>(data: { [key: string]: T }): Stream<[string, T]> {\n        return this.of(...Object.keys(data)).map(key => [key, data[key]]);\n    }\n\n    static ofDataSource<T>(dataSource: IStreamDataSource<T>) {\n        let value: T[] = [];\n        while (dataSource.hasNext()) {\n            value.push(dataSource.next());\n        }\n\n        return new Stream(...value);\n    }\n\n    limits(end: number): Stream<T> {\n        this._limits = end;\n        return this;\n    }\n\n    onElem(fn: (data: T, pos ?: number) => void | boolean): Stream<T> {\n        for (let cnt = 0; cnt < this.value.length && (this._limits == -1 || cnt < this._limits); cnt++) {\n            if (fn(this.value[cnt], cnt) === false) {\n                break;\n            }\n        }\n        return this;\n    }\n\n    each(fn: (data: T, pos ?: number) => void | boolean) {\n        this.onElem(fn);\n    }\n\n    map<R>(fn?: (data: T) => R): Stream<R> {\n        if (!fn) {\n            fn = (inval: any) => <R>inval;\n        }\n        let res: R[] = [];\n        this.each((item, cnt) => {\n            res.push(fn(item))\n        });\n\n        return new Stream<R>(...res);\n    }\n\n    /*\n     * we need to implement it to fullfill the contract, although it is used only internally\n     * all values are flattened when accessed anyway, so there is no need to call this methiod\n     */\n\n    flatMap<IStreamDataSource>(fn: (data: T) => IStreamDataSource | Array<any>): Stream<any> {\n        let ret = [];\n        this.each(item => {\n            let strmR: any = fn(item);\n            ret = Array.isArray(strmR) ? ret.concat(strmR) : ret.concat(...strmR.value);\n        });\n        return <Stream<any>>Stream.of(...ret);\n    }\n\n    filter(fn?: (data: T) => boolean): Stream<T> {\n        let res: Array<T> = [];\n        this.each((data) => {\n            if (fn(data)) {\n                res.push(data);\n            }\n        });\n        return new Stream<T>(...res);\n    }\n\n    reduce(fn: Reducable<T>, startVal: T = null): IOptional<T> {\n        let offset = startVal != null ? 0 : 1;\n        let val1 = startVal != null ? startVal : this.value.length ? this.value[0] : null;\n\n        for (let cnt = offset; cnt < this.value.length && (this._limits == -1 || cnt < this._limits); cnt++) {\n            val1 = fn(val1, this.value[cnt]);\n        }\n        return Optional.fromNullable(val1);\n    }\n\n    first(): IOptional<T> {\n        return this.value && this.value.length ? Optional.fromNullable(this.value[0]) : Optional.absent;\n    }\n\n    last(): IOptional<T> {\n        //could be done via reduce, but is faster this way\n        let length = this._limits > 0 ? Math.min(this._limits, this.value.length) : this.value.length;\n\n        return Optional.fromNullable(length ? this.value[length - 1] : null);\n    }\n\n    anyMatch(fn: Matchable<T>): boolean {\n        for (let cnt = 0; cnt < this.value.length && (this._limits == -1 || cnt < this._limits); cnt++) {\n            if (fn(this.value[cnt])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    allMatch(fn: Matchable<T>): boolean {\n        if (!this.value.length) {\n            return false;\n        }\n        let matches = 0;\n        for (let cnt = 0; cnt < this.value.length; cnt++) {\n            if (fn(this.value[cnt])) {\n                matches++;\n            }\n        }\n        return matches == this.value.length;\n    }\n\n    noneMatch(fn: Matchable<T>): boolean {\n        let matches = 0;\n        for (let cnt = 0; cnt < this.value.length; cnt++) {\n            if (!fn(this.value[cnt])) {\n                matches++;\n            }\n        }\n        return matches == this.value.length;\n    }\n\n    sort(comparator: Comparator<T>): IStream<T> {\n        let newArr = this.value.slice().sort(comparator);\n        return Stream.of(...newArr);\n    }\n\n    collect(collector: ICollector<T, any>): any {\n        this.each(data => collector.collect(data));\n        return collector.finalValue;\n    }\n\n    //-- internally exposed methods needed for the interconnectivity\n    hasNext() {\n        let isLimitsReached = this._limits != -1 && this.pos >= this._limits - 1;\n        let isEndOfArray = this.pos >= this.value.length - 1;\n        return !(isLimitsReached || isEndOfArray);\n    }\n\n    next(): T {\n        if (!this.hasNext()) {\n            return null;\n        }\n        this.pos++;\n        return this.value[this.pos];\n    }\n\n    reset() {\n        this.pos = -1;\n    }\n\n}\n\n/**\n * Lazy implementation of a Stream\n * The idea is to connect the intermediate\n * streams as datasources like a linked list\n * with reverse referencing and for special\n * operations like filtering flatmapping\n * have intermediate datasources in the list\n * with specialized functions.\n *\n * Sort of a modified pipe valve pattern\n * the streams are the pipes the intermediate\n * data sources are the valves\n *\n * We then can use passed in functions to control\n * the flow in the valves\n *\n * That way we can have a lazy evaluating stream\n *\n * So if an endpoint requests data\n * a callback trace goes back the stream list\n * which triggers an operation upwards\n * which sends data down the drain which then is processed\n * and filtered until one element hits the endpoint.\n *\n * That is repeated, until all elements are processed\n * or an internal limit is hit.\n *\n */\nexport class LazyStream<T> implements IStreamDataSource<T>, IStream<T>, IMonad<T, LazyStream<any>> {\n\n    protected dataSource: IStreamDataSource<T>;\n    _limits = -1;\n\n    /*\n     * needed to have the limits check working\n     * we need to keep track of the current position\n     * in the stream\n     */\n    pos = -1;\n\n    static of<T>(...values: Array<T>): LazyStream<T> {\n        return new LazyStream<T>(new ArrayStreamDataSource(...values));\n    }\n\n    static ofAssoc<T>(data: { [key: string]: T }): LazyStream<[string, T]> {\n        return this.of(...Object.keys(data)).map(key => [key, data[key]]);\n    }\n\n    static ofStreamDataSource<T>(value: IStreamDataSource<T>): LazyStream<T> {\n        return new LazyStream(value);\n    }\n\n    constructor(parent: IStreamDataSource<T>) {\n        this.dataSource = parent;\n\n    }\n\n    hasNext(): boolean {\n        if (this.isOverLimits()) {\n            return false;\n        }\n\n        return this.dataSource.hasNext();\n    }\n\n    next(): T {\n        let next = this.dataSource.next();\n        // @ts-ignore\n        this.pos++;\n        return next;\n    }\n\n    reset(): void {\n        this.dataSource.reset();\n        this.pos = 0;\n        this._limits = -1;\n    }\n\n    nextFilter(fn: Matchable<T>): T {\n        if (this.hasNext()) {\n            let newVal: T = this.next();\n            if (!fn(newVal)) {\n                return this.nextFilter(fn);\n            }\n            return <T>newVal;\n        }\n        return null;\n    }\n\n    limits(max: number): LazyStream<T> {\n        this._limits = max;\n        return this;\n    }\n\n    //main stream methods\n    collect(collector: ICollector<T, any>): any {\n        while (this.hasNext()) {\n            let t = this.next();\n            collector.collect(<T>t);\n        }\n        return collector.finalValue;\n    }\n\n    onElem(fn: IteratableConsumer<T>): LazyStream<T> {\n        return new LazyStream(new MappedStreamDataSource((el) => {\n            if (fn(el, this.pos) === false) {\n                this.stop();\n            }\n            return el;\n        }, this));\n    }\n\n    filter(fn: Matchable<T>): LazyStream<T> {\n        return <LazyStream<T>>new LazyStream<T>(new FilteredStreamDatasource<any>(fn, this));\n    }\n\n    map<R>(fn: Mappable<T, R>): LazyStream<any> {\n        return new LazyStream(new MappedStreamDataSource(fn, this));\n    }\n\n    flatMap<StreamMapper>(fn: StreamMapper | ArrayMapper<any>): LazyStream<any> {\n\n        return new LazyStream<any>(new FlatMapStreamDataSource(<any>fn, this));\n    }\n\n    //endpoint\n    each(fn: IteratableConsumer<T>) {\n        while (this.hasNext()) {\n            if (fn(this.next()) === false) {\n                this.stop();\n            }\n        }\n    }\n\n    reduce(fn: Reducable<T>, startVal: T = null): IOptional<T> {\n        if (!this.hasNext()) {\n            return Optional.absent;\n        }\n        let value1 = null;\n        let value2 = null;\n        if (startVal != null) {\n            value1 = startVal;\n            value2 = this.next();\n        } else {\n            value1 = this.next();\n            if (!this.hasNext()) {\n                return Optional.fromNullable(value1);\n            }\n            value2 = this.next();\n        }\n        value1 = fn(value1, value2);\n        while (this.hasNext()) {\n            value2 = this.next();\n            value1 = fn(value1, value2);\n        }\n\n        return Optional.fromNullable(value1);\n    }\n\n    last(): IOptional<T> {\n        if (!this.hasNext()) {\n            return Optional.absent;\n        }\n        return this.reduce((el1, el2) => el2);\n    }\n\n    first(): IOptional<T> {\n        this.reset();\n        if (!this.hasNext()) {\n            return Optional.absent;\n        }\n        return Optional.fromNullable(this.next());\n    }\n\n    anyMatch(fn: Matchable<T>): boolean {\n        while (this.hasNext()) {\n            if (fn(this.next())) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    allMatch(fn: Matchable<T>): boolean {\n        while (this.hasNext()) {\n            if (!fn(this.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    noneMatch(fn: Matchable<T>): boolean {\n        while (this.hasNext()) {\n            if (fn(this.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    sort(comparator: Comparator<T>): IStream<T> {\n        let arr = this.collect(new ArrayCollector());\n        arr = arr.sort(comparator);\n        return LazyStream.of(...arr);\n    }\n\n    get value(): Array<T> {\n        return this.collect(new ArrayCollector<T>());\n    }\n\n    private stop() {\n        this.pos = this._limits + 1000000000;\n    }\n\n    private isOverLimits() {\n        return this._limits != -1 && this.pos >= this._limits - 1;\n    }\n\n}\n\n\n","/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CancellablePromise} from \"./Promise\";\n\nimport {IOptional, IValueHolder} from \"./Types\";\nimport * as assert from \"assert\";\nimport {Optional} from \"./Monad\";\n\nclass TinyValueHolder<T> implements IValueHolder<T> {\n    private rootData: {[key: string]: T}\n    private key: string;\n\n    constructor(rootData: { [p: string]: any }, key: string) {\n        this.rootData = rootData;\n        this.key = key;\n    }\n\n    set value(newVal: T) {\n        this.rootData[this.key] = newVal;\n    }\n\n    get value(): T {\n        return this.rootData[this.key];\n    }\n}\n\n/**\n * Lang helpers crossported from the apache myfaces project\n */\nexport module Lang {\n    \n\n    //should be in lang, but for now here to avoid recursive imports, not sure if typescript still has a problem with those\n    /**\n     * helper function to savely resolve anything\n     * this is not an elvis operator, it resolves\n     * a value without exception in a tree and if\n     * it is not resolvable then an optional of\n     * a default value is restored or Optional.empty\n     * if none is given\n     *\n     * usage\n     * <code>\n     *     let var: Optiona<string> = saveResolve(() => a.b.c.d.e, \"foobaz\")\n     * </code>\n     *\n     * @param resolverProducer a lambda which can produce the value\n     * @param defaultValue an optional default value if the producer failes to produce anything\n     * @returns an Optional of the produced value\n     */\n    export function saveResolve<T>(resolverProducer: () => T, defaultValue: T = null): IOptional<T> {\n        try {\n            let result = resolverProducer();\n            return Optional.fromNullable(result ?? defaultValue);\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n    export function saveResolveLazy<T>(resolverProducer: () => T, defaultValue: () => T = null): IOptional<T> {\n        try {\n            let result = resolverProducer();\n            return Optional.fromNullable(result ?? defaultValue());\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n    /**\n     * String to array function performs a string to array transformation\n     * @param {String} it the string which has to be changed into an array\n     * @param {RegExp} splitter our splitter reglar expression\n     * @return a trimmed array of the splitted string\n     */\n    export function strToArray(it: string, splitter: string | RegExp = /\\./gi): Array<string> {\n\n        let ret = [];\n        it.split(splitter).forEach((element => {\n            ret.push(trim(element));\n        }));\n        return ret;\n    }\n\n    /**\n     * hyperfast trim\n     * http://blog.stevenlevithan.com/archives/faster-trim-javascript\n     * crossported from dojo\n     */\n    export function trim(str: string): string {\n        str = str.replace(/^\\s\\s*/, '');\n        let ws = /\\s/, i = str.length;\n\n        while (ws.test(str.charAt(--i))) {\n            //do nothing\n        }\n        return str.slice(0, i + 1);\n    }\n\n    /**\n     * generic object arrays like dom definitions to array conversion method which\n     * transforms any object to something array like\n     * @param obj\n     * @param offset\n     * @param pack\n     * @returns an array converted from the object\n     */\n    export function objToArray<T>(obj: any, offset: number = 0, pack: Array<T> = []): Array<T> {\n        if (\"undefined\" == typeof obj || null == obj) {\n            return pack ?? null;\n        }\n        //since offset is numeric we cannot use the shortcut due to 0 being false\n        //special condition array delivered no offset no pack\n        if ((<any>obj) instanceof Array && !offset && !pack) return obj;\n\n        return pack.concat(Array.prototype.slice.call(obj, offset));\n    }\n\n    /**\n     * equalsIgnoreCase, case insensitive comparison of two strings\n     *\n     * @param source\n     * @param destination\n     */\n    export function equalsIgnoreCase(source?: string, destination?: string): boolean {\n        let finalSource = source ?? \"___no_value__\";\n        let finalDest = destination ?? \"___no_value__\";\n\n        //in any other case we do a strong string comparison\n        return finalSource.toLowerCase() === finalDest.toLowerCase();\n    }\n\n    /*\n     * Promise wrappers for timeout and interval\n     */\n    export function timeout(timeout: number): CancellablePromise {\n        let handler: any = null;\n        return new CancellablePromise((apply: Function, reject: Function) => {\n            handler = setTimeout(() => {\n                apply();\n            }, timeout);\n        }, () => {\n            if (handler) {\n                clearTimeout(handler);\n                handler = null;\n            }\n        });\n    }\n\n    export function interval(timeout: number): CancellablePromise {\n        let handler: any = null;\n        return new CancellablePromise((apply: Function, reject: Function) => {\n            handler = setInterval(() => {\n                apply();\n            }, timeout);\n        }, () => {\n            if (handler) {\n                clearInterval(handler);\n                handler = null;\n            }\n        });\n    }\n\n    /**\n     * runtime type assertion\n     *\n     * @param probe the probe to be tested for a type\n     * @param theType the type to be tested for\n     */\n    export function assertType(probe: any, theType: any): boolean {\n        return isString(theType) ? typeof probe == theType : probe instanceof theType;\n    }\n\n    /*some hepers if you want to omit parts of the libary for many reasons*/\n\n    /**\n     * performs a deep copy of an object via json serialisation, the easy\n     * way, should also be more performant than doing it by hand\n     */\n    export function deepCopy(theObject: any): any {\n        return JSON.parse(JSON.stringify(theObject));\n    }\n\n    /**\n     * a helper which allows to avoid configs\n     * for simple operation, that way we can take out the entire config handling\n     * to reduce code (needed in myfaces we are going to drop configs there\n     * too heavyweight\n     * @param theObject\n     * @param data\n     */\n    export function val<T>(theObject: {[key: string]: any}, ...data: string[]): IValueHolder<T> {\n        let workPos = theObject;\n        let lastRet = null;\n        assert(data.length, \"at least one property must be set othweise it cannot work\");\n\n        data.forEach((key: string) => {\n            workPos[key] = workPos?.[key] ?? {};\n            lastRet = new TinyValueHolder(workPos, key);\n            workPos = workPos[key];\n        });\n\n        return lastRet ?? new TinyValueHolder(workPos, null);\n    }\n\n\n    /**\n     * Backported from dojo\n     * a failsafe string determination method\n     * (since in javascript String != \"\" typeof alone fails!)\n     * @param it {|Object|} the object to be checked for being a string\n     * @return true in case of being a string false otherwise\n     */\n    export function isString(it?: any): boolean {\n        //\tsummary:\n        //\t\tReturn true if it is a String\n        return !!arguments.length && it != null && (typeof it == \"string\" || it instanceof String); // Boolean\n    }\n\n    export function isFunc(it: any): boolean {\n        return it instanceof Function || typeof it === \"function\";\n    }\n\n\n}\n\n","import {Optional} from \"./Monad\";\n\nexport enum PromiseStatus {\n    PENDING, FULLFILLED, REJECTED\n}\n\nexport interface IPromise {\n    then(executorFunc: (val: any) => any): IPromise;\n\n    catch(executorFunc: (val: any) => any): IPromise\n\n    finally(executorFunc: () => void): IPromise;\n\n}\n\n/**\n * a small (probably not 100% correct, although I tried to be correct as possible) Promise implementation\n * for systems which do not have a promise implemented\n * Note, although an internal state is kept, this is sideffect free since\n * is value is a function to operate on, hence no real state is kept internally, except for the then\n * and catch calling order\n */\nexport class Promise implements IPromise {\n\n    status = PromiseStatus.PENDING;\n    protected allFuncs: Array<any> = [];\n    private value: (resolve: (val?: any) => void, reject: (val?: any) => void) => void;\n\n    constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void) => void) {\n        //super(executor);\n        this.value = executor;\n        this.value((data: any) => this.resolve(data), (data: any) => this.reject(data));\n    }\n\n    static all(...promises: Array<IPromise>): IPromise {\n\n        let promiseCnt = 0;\n        let myapply: Function;\n\n        let myPromise = new Promise((apply: Function, reject: Function) => {\n            myapply = apply;\n        });\n        let executor = () => {\n            promiseCnt++;\n\n            if (promises.length == promiseCnt) {\n                myapply();\n            }\n        };\n        (<any>executor).__last__ = true;\n\n        for (let cnt = 0; cnt < promises.length; cnt++) {\n            promises[cnt].finally(executor);\n        }\n        return myPromise;\n    }\n\n    static race(...promises: Array<IPromise>): IPromise {\n\n        let promiseCnt = 0;\n        let myapply: Function;\n        let myreject: Function;\n\n        let myPromise = new Promise((apply: Function, reject: Function) => {\n            myapply = apply;\n            myreject = reject;\n        });\n\n        let thenexecutor = (): IPromise => {\n            if (!!myapply) {\n                myapply();\n            }\n            myapply = null;\n            myreject = null;\n            return null;\n        };\n        (<any>thenexecutor).__last__ = true;\n\n        let catchexeutor = (): IPromise => {\n            if (!!myreject) {\n                myreject();\n            }\n            myreject = null;\n            myapply = null;\n            return null;\n        };\n        (<any>catchexeutor).__last__ = true;\n\n        for (let cnt = 0; cnt < promises.length; cnt++) {\n            promises[cnt].then(thenexecutor);\n            promises[cnt].catch(catchexeutor);\n        }\n        return myPromise;\n    }\n\n    static reject(reason: any): Promise {\n        let retVal = new Promise((resolve: any, reject: any) => {\n            //not really doable without a hack\n            if (reason instanceof Promise) {\n                reason.then((val: any) => {\n                    reject(val);\n                });\n            } else {\n                setTimeout(() => {\n                    reject(reason);\n                }, 1);\n            }\n        });\n\n        return retVal;\n    }\n\n    static resolve(reason: any): Promise {\n        let retVal = new Promise((resolve: any, reject: any) => {\n            //not really doable without a hack\n            if (reason instanceof Promise) {\n                reason.then((val) => resolve(val));\n            } else {\n                setTimeout(() => {\n                    resolve(reason);\n                }, 1);\n            }\n        });\n\n        return retVal;\n\n    }\n\n    then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): Promise {\n        this.allFuncs.push({\"then\": executorFunc});\n        if (catchfunc) {\n            this.allFuncs.push({\"catch\": catchfunc});\n        }\n        this.spliceLastFuncs();\n        return this;\n    }\n\n    catch(executorFunc: (val?: any) => void): Promise {\n        this.allFuncs.push({\"catch\": executorFunc});\n        this.spliceLastFuncs();\n        return this;\n    }\n\n    finally(executorFunc: () => void): Promise {\n        if ((<any>this).__reason__) {\n            (<any>this).__reason__.finally(executorFunc);\n            return;\n        }\n\n        this.allFuncs.push({\"finally\": executorFunc});\n        this.spliceLastFuncs();\n        return this;\n    }\n\n    protected resolve(val?: any) {\n\n        while (this.allFuncs.length) {\n            if (!this.allFuncs[0].then) {\n                break;\n            }\n            let fn = this.allFuncs.shift();\n\n            let funcResult = Optional.fromNullable(fn.then(val));\n\n            if (funcResult.isPresent()) {\n                funcResult = funcResult.flatMap();\n                val = funcResult.value;\n                if (val instanceof Promise) {\n                    //var func = (newVal: any) => {this.resolve(newVal)};\n                    //func.__last__  = true;\n                    //val.then(func);\n                    this.transferIntoNewPromise(val);\n\n                    return;\n                }\n            } else {\n                break;\n            }\n        }\n\n        this.appyFinally();\n        this.status = PromiseStatus.FULLFILLED;\n    }\n\n    protected reject(val?: any) {\n\n        while (this.allFuncs.length) {\n            if (this.allFuncs[0].finally) {\n                break;\n            }\n            var fn = this.allFuncs.shift();\n            if (fn.catch) {\n                var funcResult = Optional.fromNullable(fn.catch(val));\n                if (funcResult.isPresent()) {\n                    funcResult = funcResult.flatMap();\n                    val = funcResult.value;\n                    if (val instanceof Promise) {\n                        //val.then((newVal: any) => {this.resolve(newVal)});\n                        this.transferIntoNewPromise(val);\n                        return;\n                    }\n                    this.status = PromiseStatus.REJECTED;\n                    break;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        this.status = PromiseStatus.REJECTED;\n        this.appyFinally();\n    }\n\n    protected appyFinally() {\n        while (this.allFuncs.length) {\n            var fn = this.allFuncs.shift();\n            if (fn.finally) {\n                fn.finally();\n            }\n        }\n    }\n\n    private spliceLastFuncs() {\n        let lastFuncs = [];\n        let rest = [];\n        for (let cnt = 0; cnt < this.allFuncs.length; cnt++) {\n            for (let key in this.allFuncs[cnt]) {\n                if (this.allFuncs[cnt][key].__last__) {\n                    lastFuncs.push(this.allFuncs[cnt]);\n                } else {\n                    rest.push(this.allFuncs[cnt]);\n                }\n            }\n        }\n        this.allFuncs = rest.concat(lastFuncs);\n    }\n\n    private transferIntoNewPromise(val: any) {\n        for (var cnt = 0; cnt < this.allFuncs.length; cnt++) {\n            for (let key in this.allFuncs[cnt]) {\n                val[key](this.allFuncs[cnt][key]);\n            }\n        }\n    }\n}\n\n/**\n * a cancellable promise\n * a Promise with a cancel function, which can be cancellend any time\n * this is useful for promises which use cancellable asynchronous operations\n * note, even in a cancel state, the finally of the promise is executed, however\n * subsequent thens are not anymore.\n * The current then however is fished or a catch is called depending on how the outer\n * operation reacts to a cancel order.\n */\nexport class CancellablePromise extends Promise {\n\n    /**\n     * @param executor asynchronous callback operation which triggers the callback\n     * @param cancellator cancel operation, separate from the trigger operation\n     */\n    constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void) => void, cancellator: () => void) {\n        super(executor);\n        this.cancellator = cancellator;\n    }\n\n    cancel() {\n        this.status = PromiseStatus.REJECTED;\n        this.appyFinally();\n        //lets terminate it once and for all, the finally has been applied\n        this.allFuncs = [];\n    }\n\n    then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): CancellablePromise {\n        return <CancellablePromise>super.then(executorFunc, catchfunc);\n    }\n\n    catch(executorFunc: (val?: any) => void): CancellablePromise {\n        return <CancellablePromise>super.catch(executorFunc);\n    }\n\n    finally(executorFunc: () => void): CancellablePromise {\n        return <CancellablePromise>super.finally(executorFunc);\n    }\n\n    private cancellator = () => {\n    };\n}\n\n\n\n","/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Stream, StreamMapper} from \"./Stream\";\nimport {DomQuery} from \"./DomQuery\";\nimport {ICollector, IStreamDataSource} from \"./Types\";\n\n\n\n/**\n * implementation of iteratable on top of array\n */\nexport class ArrayStreamDataSource<T> implements IStreamDataSource<T> {\n    value: Array<T>;\n    dataPos = -1;\n\n    constructor(...value: Array<T>) {\n        this.value = value;\n    }\n\n    hasNext(): boolean {\n        return this.value.length - 1 > this.dataPos;\n    }\n\n    next(): T {\n        this.dataPos++;\n        return this.value[this.dataPos];\n    }\n\n    reset() {\n        this.dataPos = -1;\n    }\n}\n\n/**\n * an intermediate data source wich prefilters\n * incoming stream data\n * and lets only the data out which\n * passes the filter function check\n */\nexport class FilteredStreamDatasource<T> implements IStreamDataSource<T> {\n\n    filterFunc: (T) => boolean;\n    inputDataSource: IStreamDataSource<T>;\n\n    filteredNext: T = null;\n\n    constructor(filterFunc: (T) => boolean, parent: IStreamDataSource<T>) {\n        this.filterFunc = filterFunc;\n        this.inputDataSource = parent;\n    }\n\n    /**\n     * in order to filter we have to make a look ahead until the\n     * first next allowed element\n     * hence we prefetch the element and then\n     * serve it via next\n     */\n    hasNext(): boolean {\n        while (this.filteredNext == null && this.inputDataSource.hasNext()) {\n            let next: T = <T>this.inputDataSource.next();\n            if (this.filterFunc(next)) {\n                this.filteredNext = next;\n                return true;\n            } else {\n                this.filteredNext = null;\n            }\n        }\n        return this.filteredNext != null;\n\n    }\n\n    /**\n     * serve the next element\n     */\n    next(): T {\n        let ret = this.filteredNext;\n        this.filteredNext = null;\n        //We have to call hasNext, to roll another\n        //prefetch in case someone runs next\n        //sequentially without calling hasNext\n        this.hasNext();\n        return ret;\n    }\n\n    reset(): void {\n        this.filteredNext = null;\n        this.inputDataSource.reset();\n    }\n}\n\n/**\n * an intermediate datasource which maps the items from\n * one into another\n */\nexport class MappedStreamDataSource<T, S> implements IStreamDataSource<S> {\n\n    mapFunc: (T) => S;\n    inputDataSource: IStreamDataSource<T>;\n\n    constructor(mapFunc: (T) => S, parent: IStreamDataSource<T>) {\n        this.mapFunc = mapFunc;\n        this.inputDataSource = parent;\n    }\n\n    hasNext(): boolean {\n        return this.inputDataSource.hasNext();\n    }\n\n    next(): S {\n        return this.mapFunc(this.inputDataSource.next());\n    }\n\n    reset(): void {\n        this.inputDataSource.reset();\n    }\n}\n\n/**\n * Same for flatmap to deal with element -> stream mappings\n */\nexport class FlatMapStreamDataSource<T, S> implements IStreamDataSource<S> {\n\n    mapFunc: StreamMapper<T>;\n\n    inputDataSource: IStreamDataSource<T>;\n\n    /**\n     * the currently active stream\n     * coming from an incoming element\n     * once the end of this one is reached\n     * it is swapped out by another one\n     * from the next element\n     */\n    activeDataSource: IStreamDataSource<S>;\n\n    constructor(func: StreamMapper<T>, parent: IStreamDataSource<T>) {\n        this.mapFunc = func;\n        this.inputDataSource = parent;\n    }\n\n    hasNext(): boolean {\n        return this.resolveCurrentNext() || this.resolveNextNext();\n    }\n\n    private resolveCurrentNext() {\n        let next = false;\n        if (this.activeDataSource) {\n            next = this.activeDataSource.hasNext();\n        }\n        return next;\n    }\n\n    private resolveNextNext() {\n        let next = false;\n        while (!next && this.inputDataSource.hasNext()) {\n            let mapped =  this.mapFunc(this.inputDataSource.next());\n            if(Array.isArray(mapped)) {\n                this.activeDataSource = new ArrayStreamDataSource(...mapped);\n            } else {\n                this.activeDataSource = mapped;\n            }\n            next = this.activeDataSource.hasNext();\n        }\n        return next;\n    }\n\n    next(): S {\n        return this.activeDataSource.next();\n    }\n\n    reset(): void {\n        this.inputDataSource.reset();\n    }\n}\n\n/**\n * For the time being we only need one collector\n * a collector which collects a stream back into arrays\n */\nexport class ArrayCollector<S> implements ICollector<S, Array<S>> {\n    private data: Array<S> = [];\n\n    collect(element: S) {\n        this.data.push(element);\n    }\n\n    get finalValue(): Array<S> {\n        return this.data;\n    }\n}\n\n/**\n * collects an assoc stream back to an assoc array\n */\nexport class AssocArrayCollector<S> implements ICollector<[string, S] | string, {[key:string]:S}> {\n\n    finalValue: {[key:string]:any} = {};\n\n    collect(element: [string, S] | string) {\n        this.finalValue[element[0] ?? <string>element] = element[1] ?? true;\n    }\n}\n\n/**\n * Form data collector for key value pair streams\n */\nexport class FormDataCollector implements ICollector<{ key: string, value: any }, FormData> {\n    finalValue: FormData = new FormData();\n\n    collect(element: { key: string; value: any }) {\n        this.finalValue.append(element.key, element.value);\n    }\n}\n\n/**\n * Form data collector for DomQuery streams\n */\nexport class QueryFormDataCollector implements ICollector<DomQuery, FormData> {\n    finalValue: FormData = new FormData();\n\n    collect(element: DomQuery) {\n        //no value passed down we get an assoc array back\n        let toMerge = element.encodeFormElement();\n        if (Object.keys(toMerge)) {\n            let name = element.name.value;\n            this.finalValue.append(name, toMerge[name]);\n        }\n    }\n}\n\n/**\n * Encoded String collector from dom query streams\n */\nexport class QueryFormStringCollector implements ICollector<DomQuery, string> {\n\n    formData: [[string, string]] = <any>[];\n\n    collect(element: DomQuery) {\n        let toMerge = element.encodeFormElement();\n        if (Object.keys(toMerge).length) {\n            let name = element.name.value;\n            this.formData.push([name, toMerge[name]]);\n        }\n    }\n\n    get finalValue(): string {\n        return Stream.of(...this.formData)\n            .map<string>(keyVal => keyVal.join(\"=\"))\n            .reduce((item1, item2) => [item1, item2].join(\"&\"))\n            .orElse(\"\").value;\n    }\n}","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Optional, ValueEmbedder} from \"./Monad\";\nimport {XMLQuery} from \"./XmlQuery\";\nimport {IStream, LazyStream, Stream} from \"./Stream\";\nimport {ICollector, IOptional, IStreamDataSource, IValueEmbedder} from \"./Types\";\nimport {Lang} from \"./Lang\";\nimport {IConfig, IValueHolder} from \"./Types\";\nimport trim = Lang.trim;\nimport objToArray = Lang.objToArray;\nimport isString = Lang.isString;\nimport equalsIgnoreCase = Lang.equalsIgnoreCase;\nimport deepCopy = Lang.deepCopy;\nimport val = Lang.val;\n\n// @ts-ignore supression needed here due to fromnullable\nexport class ElementAttribute extends ValueEmbedder<string> {\n\n    constructor(private element: DomQuery, private name: string, private defaultVal: string = null) {\n        super(element, name);\n    }\n\n    get value(): string {\n        let val: Element[] = this.element.get(0).orElse(...[]).values;\n        if (!val.length) {\n            return this.defaultVal;\n        }\n        return val[0].getAttribute(this.name);\n    }\n\n    set value(value: string) {\n        let val: Element[] = this.element.get(0).orElse(...[]).values;\n        for (let cnt = 0; cnt < val.length; cnt++) {\n            val[cnt].setAttribute(this.name, value);\n        }\n        val[0].setAttribute(this.name, value);\n    }\n\n    getClass(): any {\n        return ElementAttribute;\n    }\n\n    static fromNullable(value?: any, valueKey: string = \"value\"): ElementAttribute {\n        return new ElementAttribute(value, valueKey);\n    }\n\n}\n\n/**\n * small helper for the specialized jsf case\n * @param src\n * @constructor\n */\nconst DEFAULT_JSF_WHITELIST = (src: string) => {\n    return (src.indexOf(\"ln=scripts\") == -1 &&\n        src.indexOf(\"ln=javax.faces\") == -1) ||\n        (src.indexOf(\"/jsf.js\") == -1 &&\n            src.indexOf(\"/jsf-uncompressed.js\") == -1);\n};\n\ninterface IDomQuery {\n    /**\n     * reads the first element if it exists and returns an optional\n     */\n    readonly value: IOptional<Element>;\n    /**\n     * All elements as array\n     */\n    readonly values: Element[];\n    /**\n     * returns the id as settable value (See also ValueEmbedder)\n     */\n    readonly id: IValueEmbedder<string>;\n    /**\n     * returns the length of embedded nodes (top level)\n     */\n    readonly length: number;\n    /**\n     * the tag name of the first element\n     */\n    readonly tagName: IOptional<string>;\n    /**\n     * the node name of the first element\n     */\n    readonly nodeName: IOptional<string>;\n    /**\n     * the type of the first element\n     */\n    readonly type: IOptional<string>;\n    /**\n     * The name as changeable value\n     */\n    readonly name: IValueEmbedder<string>;\n    /**\n     * The the value in case of inputs as changeable value\n     */\n    readonly inputValue: IValueEmbedder<string | boolean>;\n    /**\n     * the underlying form elements as domquery object\n     */\n    readonly elements: IDomQuery;\n    /**\n     * settable flag for disabled\n     */\n    disabled: boolean;\n    /**\n     * The child nodes of this node collection as readonly attribute\n     */\n    readonly childNodes: IDomQuery;\n    /**\n     * an early stream representation for this DomQuery\n     */\n    readonly stream: Stream<DomQuery>;\n    /**\n     * lazy stream representation for this DomQuery\n     */\n    readonly lazyStream: LazyStream<DomQuery>;\n    /**\n     * transform this node collection to an array\n     */\n    readonly asArray: Array<DomQuery>;\n\n    /**\n     * returns true if the elements have the tag *tagName* as tag embedded (highest level)\n     * @param tagName\n     */\n    isTag(tagName: string): boolean;\n\n    /**\n     * returns the nth element as domquery\n     * from the internal elements\n     * note if you try to reach a non existing element position\n     * you will get back an absent entry\n     *\n     * @param index the nth index\n     */\n    get(index: number): IDomQuery;\n\n    /**\n     * returns the nth element as optional of an Element object\n     * @param index the number from the index\n     * @param defaults the default value if the index is overrun default Optional.absent\n     */\n    getAsElem(index: number, defaults: Optional<any>): IOptional<Element>;\n\n    /**\n     * returns the value array< of all elements\n     */\n    allElems(): Array<Element>;\n\n    /**\n     * absent no values reached?\n     */\n    isAbsent(): boolean;\n\n    /**\n     * should make the code clearer\n     * note if you pass a function\n     * this refers to the active dopmquery object\n     */\n    isPresent(presentRunnable ?: (elem ?: DomQuery) => void): boolean;\n\n    /**\n     * should make the code clearer\n     * note if you pass a function\n     * this refers to the active dopmquery object\n     *\n     *\n     * @param presentRunnable\n     */\n    ifPresentLazy(presentRunnable: (elem ?: DomQuery) => void): DomQuery;\n\n    /**\n     * remove all affected nodes from this query object from the dom tree\n     */\n    delete(): void;\n\n    /**\n     * query selector all on the existing dom query object\n     *\n     * @param selector the standard selector\n     * @return a DomQuery with the results\n     */\n    querySelectorAll(selector): IDomQuery;\n\n    /**\n     * core byId method\n     * @param id the id to search for\n     * @param includeRoot also match the root element?\n     */\n    byId(id: string, includeRoot?: boolean): IDomQuery;\n\n    /**\n     * same as byId just for the tag name\n     * @param tagName\n     * @param includeRoot\n     */\n    byTagName(tagName: string, includeRoot ?: boolean): IDomQuery;\n\n    /**\n     * attr accessor, usage myQuery.attr(\"class\").value = \"bla\"\n     * or let value myQuery.attr(\"class\").value\n     * @param attr the attribute to set\n     * @param defaultValue the default value in case nothing is presented (defaults to null)\n     */\n    attr(attr: string, defaultValue: string): ElementAttribute;\n\n    /**\n     * hasclass, checks for an existing class in the class attributes\n     *\n     * @param clazz the class to search for\n     */\n    hasClass(clazz: string): boolean;\n\n    /**\n     * appends a class string if not already in the element(s)\n     *\n     * @param clazz the style class to append\n     */\n    addClass(clazz: string): IDomQuery;\n\n    /**\n     * remove the style class if in the class definitions\n     *\n     * @param clazz\n     */\n    removeClass(clazz: string): IDomQuery;\n\n    /**\n     * checks whether we have a multipart element in our children\n     */\n    isMultipartCandidate(): boolean;\n\n    /**\n     * innerHtml equivalkent\n     * equivalent to jqueries html\n     * as setter the html is set and the\n     * DomQuery is given back\n     * as getter the html string is returned\n     *\n     * @param inval\n     */\n    html(inval?: string): IDomQuery | IOptional<string>;\n\n    /**\n     * easy node traversal, you can pass\n     * a set of node selectors which are joined as direct childs\n     *\n     * not the rootnodes are not in the getIf, those are always the child nodes\n     *\n     * @param nodeSelector\n     */\n    getIf(...nodeSelector: Array<string>): IDomQuery;\n\n    /**\n     * iterate over each element and perform something on the element\n     * (Dom element is passed instead of IDomQuery)\n     * @param func\n     */\n    eachElem(func: (item: Element, cnt?: number) => any): IDomQuery;\n\n    /**\n     * perform an operation on the first element\n     * returns a IDomQuery on the first element only\n     * @param func\n     */\n    firstElem(func: (item: Element, cnt?: number) => any): IDomQuery;\n\n    /**\n     * same as eachElem, but a IDomQuery object is passed down\n     *\n     * @param func\n     */\n    each(func: (item: IDomQuery, cnt?: number) => any): IDomQuery;\n\n    /**\n     * returns a new dom query containing only the first element max\n     *\n     * @param func a an optional callback function to perform an operation on the first element\n     */\n    first(func: (item: IDomQuery, cnt?: number) => any): IDomQuery;\n\n    /**\n     * filter function which filters a subset\n     *\n     * @param func\n     */\n    filter(func: (item: IDomQuery) => boolean): IDomQuery;\n\n    /**\n     * global eval head appendix method\n     * no other methods are supported anymore\n     * @param code the code to be evaled\n     * @param  nonce optional  nonce key for higher security\n     */\n    globalEval(code: string, nonce ?: string): IDomQuery;\n\n    /**\n     * detaches a set of nodes from their parent elements\n     * in a browser independend manner\n     * @param {Object} items the items which need to be detached\n     * @return {Array} an array of nodes with the detached dom nodes\n     */\n    detach(): IDomQuery;\n\n    /**\n     * appends the current set of elements\n     * to the element or first element passed via elem\n     * @param elem\n     */\n    appendTo(elem: IDomQuery): void;\n\n    /**\n     * loads and evals a script from a source uri\n     *\n     * @param src the source to be loaded and evaled\n     * @param defer in miliseconds execution default (0 == no defer)\n     * @param charSet\n     */\n    loadScriptEval(src: string, defer: number, charSet: string): void;\n\n    /**\n     * insert toInsert after the current element\n     *\n     * @param toInsert an array of IDomQuery objects\n     */\n    insertAfter(...toInsert: Array<DomQuery>): IDomQuery;\n\n    /**\n     * inserts the elements before the current element\n     *\n     * @param toInsert\n     */\n    insertBefore(...toInsert: Array<DomQuery>): IDomQuery;\n\n    /**\n     * in case the IDomQuery is pointing to nothing the else value is taken into consideration\n     * als alternative\n     *\n     * @param elseValue the else value\n     */\n    orElse(...elseValue: any): IDomQuery;\n\n    /**\n     * the same with lazy evaluation for cases where getting the else value\n     * is a heavy operation\n     *\n     * @param func the else provider function\n     */\n    orElseLazy(func: () => any): IDomQuery;\n\n    /**\n     * all parents with TagName\n     * @param tagName\n     */\n    parents(tagName: string): IDomQuery;\n\n    /**\n     * copy all attributes of sourceItem to this IDomQuery items\n     *\n     * @param sourceItem the source item to copy over (can be another IDomQuery or a parsed XML Query item)\n     */\n    copyAttrs(sourceItem: IDomQuery | XMLQuery): IDomQuery;\n\n    /**\n     * outerhtml convenience method\n     * browsers only support innerHTML but\n     * for instance for your jsf.js we have a full\n     * replace pattern which needs outerHTML processing\n     *\n     * @param markup\n     * @param runEmbeddedScripts\n     * @param runEmbeddedCss\n     */\n    outerHTML(markup: string, runEmbeddedScripts ?: boolean, runEmbeddedCss ?: boolean): IDomQuery;\n\n    /**\n     * Run through the given nodes in the IDomQuery execute the inline scripts\n     * @param whilteListed: optional whitelist function which can filter out script tags which are not processed\n     * defaults to the standard jsf.js exclusion (we use this code for myfaces)\n     */\n    runScripts(whilteListed: (val: string) => boolean): IDomQuery;\n\n    /**\n     * runs the embedded css\n     */\n    runCss(): IDomQuery;\n\n    /**\n     * fires a click event on the underlying dom elements\n     */\n    click(): IDomQuery;\n\n    /**\n     * adds an event listener\n     *\n     * @param type\n     * @param listener\n     * @param options\n     */\n    addEventListener(type: string, listener: (evt: Event) => void, options?: boolean | EventListenerOptions): IDomQuery;\n\n    /**\n     * removes an event listener\n     *\n     * @param type\n     * @param listener\n     * @param options\n     */\n    removeEventListener(type: string, listener: (evt: Event) => void, options?: boolean | EventListenerOptions): IDomQuery;\n\n    /**\n     * fires an event\n     */\n    fireEvent(eventName: string): void;\n\n    /*\n     * pushes  in optionally a new textContent, and/or returns the current text content\n     */\n    textContent(joinstr?: string): string;\n\n    /*\n     * pushes  in optionally a new innerText, and/or returns the current innerText\n     */\n    innerText(joinstr?: string): string;\n\n    /**\n     * encodes all input elements properly into respective\n     * config entries, this can be used\n     * for legacy systems, for newer usecases, use the\n     * HTML5 Form class which all newer browsers provide\n     *\n     * @param toMerge optional config which can be merged in\n     * @return a copy pf\n     */\n    encodeFormElement(toMerge?: IConfig | {[key: string]: any}): IConfig | {[key: string]: any};\n\n    /**\n     * fetches the subnodes from ... to..\n     * @param from\n     * @param to\n     */\n    subNodes(from: number, to?: number): IDomQuery;\n}\n\n/**\n * Monadic DomNode representation, ala jquery\n * This is a thin wrapper over querySelectorAll\n * to get slim monadic support\n * to reduce implementation code on the users side.\n * This is vital for frameworks which want to rely on\n * plain dom but still do not want to lose\n * the reduced code footprint of querying dom trees and traversing\n * by using functional patterns.\n *\n * Also a few convenience methods are added to reduce\n * the code footprint of standard dom processing\n * operations like eval\n *\n * TODO add jquery fallback support, since it is supported\n * in most older systems\n * Note parts of this code still stem from the Dom.js I have written 10 years\n * ago, those parts look a little bit ancient and will be replaced over time.\n *\n */\nexport class DomQuery implements IDomQuery, IStreamDataSource<DomQuery> {\n\n    static absent = new DomQuery();\n\n    private rootNode: Array<Element> = [];\n\n    pos = -1;\n\n    constructor(...rootNode: Array<Element | DomQuery | Document | Array<any> | string>) {\n\n        if (Optional.fromNullable(rootNode).isAbsent() || !rootNode.length) {\n            return;\n        } else {\n            //we need to flatten out the arrays\n\n            for (let cnt = 0; cnt < rootNode.length; cnt++) {\n                if (isString(rootNode[cnt])) {\n                    let foundElement = DomQuery.querySelectorAll(<string>rootNode[cnt]);\n                    if (!foundElement.isAbsent()) {\n                        rootNode.push(...foundElement.values)\n                    }\n                } else if (rootNode[cnt] instanceof DomQuery) {\n                    this.rootNode.push(...(<any>rootNode[cnt]).values);\n                } else if (isString(rootNode[cnt])) {\n                    let result = DomQuery.querySelectorAll(<string>rootNode[cnt]);\n                    this.rootNode.push(...result.values);\n\n                } else {\n                    this.rootNode.push(<any>rootNode[cnt]);\n                }\n            }\n        }\n    }\n\n    /**\n     * returns the first element\n     */\n    get value(): IOptional<Element> {\n        return this.getAsElem(0);\n    }\n\n    get values(): Element[] {\n        return this.allElems();\n    }\n\n    /**\n     * returns the id of the first element\n     */\n    get id(): ValueEmbedder<string> {\n        return new ValueEmbedder<string>(this.getAsElem(0).value, \"id\");\n    }\n\n    /**\n     * length of the entire query set\n     */\n    get length(): number {\n        return this.rootNode.length\n    }\n\n    /**\n     * convenience method for tagName\n     */\n    get tagName(): IOptional<string> {\n        return <Optional<string>>this.getAsElem(0).getIf(\"tagName\");\n    }\n\n    /**\n     * convenience method for nodeName\n     */\n    get nodeName(): Optional<string> {\n        return <Optional<string>>this.getAsElem(0).getIf(\"nodeName\");\n    }\n\n    isTag(tagName: string): boolean {\n        return !this.isAbsent()\n            && (this.nodeName.orElse(\"__none___\")\n                    .value.toLowerCase() == tagName.toLowerCase()\n                || this.tagName.orElse(\"__none___\")\n                    .value.toLowerCase() == tagName.toLowerCase()\n            )\n    }\n\n    /**\n     * convenience property for type\n     *\n     * returns null in case of no type existing otherwise\n     * the type of the first element\n     */\n    get type(): IOptional<string> {\n        return <IOptional<string>> this.getAsElem(0).getIf(\"type\");\n    }\n\n    /**\n     * convenience property for name\n     *\n     * returns null in case of no type existing otherwise\n     * the name of the first element\n     */\n    get name(): ValueEmbedder<string> {\n        return new ValueEmbedder<string>(this.getAsElem(0).value, \"name\");\n    }\n\n    /**\n     * convenience property for value\n     *\n     * returns null in case of no type existing otherwise\n     * the value of the first element\n     */\n    get inputValue(): ValueEmbedder<string | boolean> {\n        if (this.getAsElem(0).getIf(\"value\").isPresent()) {\n            return new ValueEmbedder<string>(this.getAsElem(0).value);\n        } else {\n            return <any>ValueEmbedder.absent;\n        }\n    }\n\n    get checked(): boolean {\n        return Stream.of(...this.values).allMatch(el => !!(<any>el).checked);\n    }\n\n    set checked(newChecked: boolean) {\n        this.eachElem(el => (<any>el).checked = newChecked);\n    }\n\n    get elements(): DomQuery {\n        let elements: DomQuery = this.stream.flatMap((item: DomQuery) => {\n            let formElement: HTMLFormElement = <HTMLFormElement>item.value.value;\n            return new Stream(formElement.elements ? objToArray(formElement.elements) : []);\n        }).filter(item => !!item).collect(new DomQueryCollector());\n\n        return elements\n            .orElseLazy(() => this.querySelectorAll(\"input, select, textarea, fieldset\"));\n    }\n\n    /**\n     * todo align this api with the rest of the apis\n     */\n    get disabled(): boolean {\n        return this.attr(\"disabled\").isPresent();\n    }\n\n    set disabled(disabled: boolean) {\n        // this.attr(\"disabled\").value = disabled + \"\";\n        if (!disabled) {\n            this.removeAttribute(\"disabled\");\n        } else {\n            this.attr(\"disabled\").value = \"disabled\";\n        }\n\n    }\n\n    removeAttribute(name: string) {\n        this.eachElem(item => item.removeAttribute(name));\n    }\n\n    get childNodes(): DomQuery {\n        let childNodeArr: Array<Element> = [];\n        this.eachElem((item: Element) => {\n            childNodeArr = childNodeArr.concat(objToArray(item.childNodes));\n        });\n        return new DomQuery(...childNodeArr);\n    }\n\n    /**\n     * binding into stream\n     */\n    get stream(): Stream<DomQuery> {\n        return new Stream<DomQuery>(...this.asArray);\n    }\n\n    /**\n     * fetches a lazy stream representation\n     * lazy should be applied if you have some filters etc\n     * in between, this can reduce the number of post filter operations\n     * and ram usage\n     * significantly because the operations are done lazily and stop\n     * once they hit a dead end.\n     */\n    get lazyStream(): LazyStream<DomQuery> {\n        return LazyStream.ofStreamDataSource(this);\n    }\n\n    get asArray(): Array<DomQuery> {\n        let ret: Array<DomQuery> = [];\n        this.each((item) => {\n            ret.push(item);\n        });\n        return ret;\n    }\n\n    /**\n     * easy query selector all producer\n     *\n     * @param selector the selector\n     * @returns a results dom query object\n     */\n    static querySelectorAll(selector: string): DomQuery {\n        return new DomQuery(document).querySelectorAll(selector);\n    }\n\n    /**\n     * byId producer\n     *\n     * @param selector id\n     * @return a DomQuery containing the found elements\n     */\n    static byId(selector: string | DomQuery | Element): DomQuery {\n        if (isString(selector)) {\n            return new DomQuery(document).byId(<string>selector);\n        } else {\n            return new DomQuery(<any>selector);\n        }\n    }\n\n    /**\n     * byTagName producer\n     *\n     * @param selector name\n     * @return a DomQuery containing the found elements\n     */\n    static byTagName(selector: string | DomQuery | Element): DomQuery {\n        if (isString(selector)) {\n            return new DomQuery(document).byTagName(<string>selector);\n        } else {\n            return new DomQuery(<any>selector);\n        }\n    }\n\n    static globalEval(code: string, nonce?: string): DomQuery {\n        return new DomQuery(document).globalEval(code, nonce);\n    }\n\n    /**\n     * builds the ie nodes properly in a placeholder\n     * and bypasses a non script insert bug that way\n     * @param markup the marku code\n     */\n    static fromMarkup(markup: string): DomQuery {\n        let domParser: DOMParser = Lang.saveResolve(() => new DOMParser()).value;\n        if (domParser) {\n            let document = domParser.parseFromString(markup, \"text/html\");\n            return new DomQuery(document);\n        } else {\n            //https://developer.mozilla.org/de/docs/Web/API/DOMParser license creative commons\n            const doc = document.implementation.createHTMLDocument(\"\");\n            markup = trim(markup);\n            let lowerMarkup = markup.toLowerCase();\n            if (lowerMarkup.includes('<!doctype') ||\n                lowerMarkup.includes('<html') ||\n                lowerMarkup.includes('<head') || //TODO proper regexps here to avoid embedded tags with same element names to be triggered\n                lowerMarkup.includes('<body')) {\n                doc.documentElement.innerHTML = markup;\n                return new DomQuery(doc.documentElement);\n            } else {\n                doc.body.innerHTML = markup;\n                return new DomQuery(...<Array<Element>>objToArray(doc.body.childNodes));\n            }\n        }\n    }\n\n    /**\n     * returns the nth element as domquery\n     * from the internal elements\n     * note if you try to reach a non existing element position\n     * you will get back an absent entry\n     *\n     * @param index the nth index\n     */\n    get(index: number): DomQuery {\n        return (index < this.rootNode.length) ? new DomQuery(this.rootNode[index]) : DomQuery.absent;\n    }\n\n    /**\n     * returns the nth element as optional of an Element object\n     * @param index the number from the index\n     * @param defaults the default value if the index is overrun default Optional.absent\n     */\n    getAsElem(index: number, defaults: IOptional<any> = Optional.absent): IOptional<Element> {\n        return (index < this.rootNode.length) ? Optional.fromNullable(this.rootNode[index]) : defaults;\n    }\n\n    /**\n     * returns the value array< of all elements\n     */\n    allElems(): Array<Element> {\n        return this.rootNode;\n    }\n\n    /**\n     * absent no values reached?\n     */\n    isAbsent(): boolean {\n        return this.length == 0;\n    }\n\n    /**\n     * should make the code clearer\n     * note if you pass a function\n     * this refers to the active dopmquery object\n     */\n    isPresent(presentRunnable ?: (elem ?: DomQuery) => void): boolean {\n        let absent = this.isAbsent();\n        if (!absent && presentRunnable) {\n            presentRunnable.call(this, this)\n        }\n        return !absent;\n    }\n\n    /**\n     * should make the code clearer\n     * note if you pass a function\n     * this refers to the active dopmquery object\n     *\n     *\n     * @param presentRunnable\n     */\n    ifPresentLazy(presentRunnable: (elem ?: DomQuery) => void = function () {\n    }): DomQuery {\n        this.isPresent.call(this, presentRunnable);\n        return this;\n    }\n\n    /**\n     * remove all affected nodes from this query object from the dom tree\n     */\n    delete() {\n        this.eachElem((node: Element) => {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        });\n    }\n\n    /**\n     * query selector all on the existing dom query object\n     *\n     * @param selector the standard selector\n     * @return a DomQuery with the results\n     */\n    querySelectorAll(selector): DomQuery {\n        if (this.rootNode.length == 0) {\n            return this;\n        }\n        let nodes = [];\n        for (let cnt = 0; cnt < this.rootNode.length; cnt++) {\n            if (!this.rootNode[cnt].querySelectorAll) {\n                continue;\n            }\n            let res = this.rootNode[cnt].querySelectorAll(selector);\n            nodes = nodes.concat(objToArray(res));\n        }\n\n        return new DomQuery(...nodes);\n    }\n\n    /**\n     * core byId method\n     * @param id the id to search for\n     * @param includeRoot also match the root element?\n     */\n    byId(id: string, includeRoot?: boolean): DomQuery {\n        let res: Array<DomQuery> = [];\n        for (let cnt = 0; includeRoot && cnt < this.rootNode.length; cnt++) {\n            if (this.rootNode[cnt].id == id) {\n                res.push(new DomQuery(this.rootNode[cnt]));\n            }\n        }\n        //for some strange kind of reason the # selector fails\n        //on hidden elements we use the attributes match selector\n        //that works\n        res = res.concat(this.querySelectorAll(`[id=\"${id}\"]`));\n        return new DomQuery(...res);\n    }\n\n    /**\n     * same as byId just for the tag name\n     * @param tagName\n     * @param includeRoot\n     */\n    byTagName(tagName: string, includeRoot ?: boolean): DomQuery {\n        let res = [];\n        for (let cnt = 0; includeRoot && cnt < this.rootNode.length; cnt++) {\n            if (this.rootNode[cnt].tagName == tagName) {\n                res.push(new DomQuery(this.rootNode[cnt]));\n            }\n        }\n        res = res.concat(this.querySelectorAll(tagName));\n        return new DomQuery(...res);\n    }\n\n    /**\n     * attr accessor, usage myQuery.attr(\"class\").value = \"bla\"\n     * or let value myQuery.attr(\"class\").value\n     * @param attr the attribute to set\n     * @param defaultValue the default value in case nothing is presented (defaults to null)\n     */\n    attr(attr: string, defaultValue: string = null): ElementAttribute {\n        return new ElementAttribute(this, attr, defaultValue);\n    }\n\n    /**\n     * hasclass, checks for an existing class in the class attributes\n     *\n     * @param clazz the class to search for\n     */\n    hasClass(clazz: string) {\n        let hasIt = false;\n\n        this.each((item) => {\n            let oldClass = item.attr(\"class\").value || \"\";\n            if (oldClass.toLowerCase().indexOf(clazz.toLowerCase()) == -1) {\n                return;\n            } else {\n                let oldClasses = oldClass.split(/\\s+/gi);\n                let found = false;\n                for (let cnt = 0; cnt < oldClasses.length && !found; cnt++) {\n                    found = oldClasses[cnt].toLowerCase() == clazz.toLowerCase();\n                }\n                hasIt = hasIt || found;\n                if (hasIt) {\n                    return false;\n                }\n            }\n        });\n        return hasIt;\n    }\n\n    /**\n     * appends a class string if not already in the element(s)\n     *\n     * @param clazz the style class to append\n     */\n    addClass(clazz: string): DomQuery {\n        this.each((item) => {\n            let oldClass = item.attr(\"class\").value || \"\";\n            if (!this.hasClass(clazz)) {\n                item.attr(\"class\").value = trim(oldClass + \" \" + clazz);\n                return;\n            }\n        });\n        return this;\n    }\n\n    /**\n     * remove the style class if in the class definitions\n     *\n     * @param clazz\n     */\n    removeClass(clazz: string): DomQuery {\n        this.each((item) => {\n            if (this.hasClass(clazz)) {\n                let oldClass = item.attr(\"class\").value || \"\";\n                let newClasses = [];\n                let oldClasses = oldClass.split(/\\s+/gi);\n                for (let cnt = 0; cnt < oldClasses.length; cnt++) {\n                    if (oldClasses[cnt].toLowerCase() != clazz.toLowerCase()) {\n                        newClasses.push(oldClasses[cnt]);\n                    }\n                }\n                item.attr(\"class\").value = newClasses.join(\" \");\n            }\n        });\n        return this;\n    }\n\n    /**\n     * checks whether we have a multipart element in our children\n     */\n    isMultipartCandidate(): boolean {\n        return this.querySelectorAll(\"input[type='file']\").firstElem().isPresent();\n    }\n\n    /**\n     * innerHtml equivalkent\n     * equivalent to jqueries html\n     * as setter the html is set and the\n     * DomQuery is given back\n     * as getter the html string is returned\n     *\n     * @param inval\n     */\n    html(inval?: string): IDomQuery | IOptional<string> {\n        if (Optional.fromNullable(inval).isAbsent()) {\n            return this.isPresent() ? Optional.fromNullable(this.innerHtml) : Optional.absent;\n        }\n        this.innerHtml = inval;\n\n        return this;\n    }\n\n    set innerHtml(inVal: string) {\n        this.eachElem(elem => elem.innerHTML = inVal);\n    }\n\n    get innerHtml(): string {\n        let retArr = [];\n        this.eachElem(elem => retArr.push(elem.innerHTML));\n        return retArr.join(\"\");\n    }\n\n    //source: https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    //code snippet license: https://creativecommons.org/licenses/by-sa/2.5/\n    private _mozMatchesSelector(toMatch: Element, selector: string): boolean {\n        let prot: { [key: string]: Function } = (<any>toMatch);\n        let matchesSelector: Function = prot.matchesSelector ||\n            prot.mozMatchesSelector ||\n            prot.msMatchesSelector ||\n            prot.oMatchesSelector ||\n            prot.webkitMatchesSelector ||\n            function (s: string) {\n                let matches: NodeListOf<HTMLElement> = (document || (<any>window).ownerDocument).querySelectorAll(s),\n                    i = matches.length;\n                while (--i >= 0 && matches.item(i) !== toMatch) {\n                }\n                return i > -1;\n            };\n        return matchesSelector.call(toMatch, selector);\n    }\n\n    /**\n     * filters the current dom query elements\n     * upon a given selector\n     *\n     * @param selector\n     */\n    filterSelector(selector: string): DomQuery {\n        let matched = [];\n\n        this.eachElem(item => {\n            if (this._mozMatchesSelector(item, selector)) {\n                matched.push(item)\n            }\n        });\n        return new DomQuery(...matched);\n    }\n\n    matchesSelector(selector: string): boolean {\n        this.eachElem(item => {\n            if (!this._mozMatchesSelector(item, selector)) {\n                return false;\n            }\n        });\n        return true;\n    }\n\n    /**\n     * easy node traversal, you can pass\n     * a set of node selectors which are joined as direct childs\n     *\n     * not the rootnodes are not in the getIf, those are always the child nodes\n     *\n     * @param nodeSelector\n     */\n    getIf(...nodeSelector: Array<string>): DomQuery {\n\n        let selectorStage: DomQuery = this.childNodes;\n        for (let cnt = 0; cnt < nodeSelector.length; cnt++) {\n            selectorStage = selectorStage.filterSelector(nodeSelector[cnt]);\n            if (selectorStage.isAbsent()) {\n                return selectorStage;\n            }\n        }\n        return selectorStage;\n    }\n\n    eachElem(func: (item: Element, cnt?: number) => any): DomQuery {\n        for (let cnt = 0, len = this.rootNode.length; cnt < len; cnt++) {\n            if (func(this.rootNode[cnt], cnt) === false) {\n                break;\n            }\n        }\n        return this;\n    }\n\n    firstElem(func: (item: Element, cnt?: number) => any = item => item): DomQuery {\n        if (this.rootNode.length > 1) {\n            func(this.rootNode[0], 0);\n        }\n        return this;\n    }\n\n    each(func: (item: DomQuery, cnt?: number) => any): DomQuery {\n        for (let cnt = 0, len = this.rootNode.length; cnt < len; cnt++) {\n            if (func(this.get(cnt), cnt) === false) {\n                break;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * returns a new dom query containing only the first element max\n     *\n     * @param func a an optional callback function to perform an operation on the first element\n     */\n    first(func: (item: DomQuery, cnt?: number) => any = (item) => item): DomQuery {\n        if (this.rootNode.length >= 1) {\n            func(this.get(0), 0);\n            return this.get(0);\n        }\n        return this;\n    }\n\n    /**\n     * filter function which filters a subset\n     *\n     * @param func\n     */\n    filter(func: (item: DomQuery) => boolean): DomQuery {\n        let reArr: Array<DomQuery> = [];\n        this.each((item: DomQuery) => {\n            func(item) ? reArr.push(item) : null;\n        });\n        return new DomQuery(...<any>reArr);\n    }\n\n    //TODO append prepend\n\n    /**\n     * global eval head appendix method\n     * no other methods are supported anymore\n     * @param code the code to be evaled\n     * @param  nonce optional  nonce key for higher security\n     */\n    globalEval(code: string, nonce ?: string): DomQuery {\n        let head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n        let script = document.createElement(\"script\");\n        if (nonce) {\n            script.setAttribute(\"nonce\", nonce);\n        }\n        script.type = \"text/javascript\";\n        script.innerHTML = code;\n        let newScriptElement = head.appendChild(script);\n        head.removeChild(newScriptElement);\n        return this;\n    }\n\n    /**\n     * detaches a set of nodes from their parent elements\n     * in a browser independend manner\n     * @param {Object} items the items which need to be detached\n     * @return {Array} an array of nodes with the detached dom nodes\n     */\n    detach(): DomQuery {\n        this.eachElem((item: Element) => {\n            item.parentNode.removeChild(item);\n        });\n        return this;\n    }\n\n    /**\n     * appends the current set of elements\n     * to the element or first element passed via elem\n     * @param elem\n     */\n    appendTo(elem: DomQuery) {\n        this.eachElem((item) => {\n            let value1: Element = <Element>elem.getAsElem(0).orElseLazy(() => {\n                return {\n                    appendChild: (theItem: any) => {\n                    }\n                }\n            }).value;\n            value1.appendChild(item);\n        });\n    }\n\n    /**\n     * loads and evals a script from a source uri\n     *\n     * @param src the source to be loaded and evaled\n     * @param defer in miliseconds execution default (0 == no defer)\n     * @param charSet\n     */\n    loadScriptEval(src: string, defer: number = 0, charSet: string = \"utf-8\") {\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", src, false);\n\n        if (charSet) {\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-javascript; charset:\" + charSet);\n        }\n\n        xhr.send(null);\n\n        xhr.onload = (responseData: any) => {\n            //defer also means we have to process after the ajax response\n            //has been processed\n            //we can achieve that with a small timeout, the timeout\n            //triggers after the processing is done!\n            if (!defer) {\n                this.globalEval(xhr.responseText.replace(\"\\n\", \"\\r\\n\") + \"\\r\\n//@ sourceURL=\" + src);\n            } else {\n                //TODO not ideal we maybe ought to move to something else here\n                //but since it is not in use yet, it is ok\n                setTimeout(() => {\n                    this.globalEval(xhr.responseText + \"\\r\\n//@ sourceURL=\" + src);\n                }, defer);\n            }\n        };\n\n        xhr.onerror = (data: any) => {\n            throw Error(data);\n        };\n        //since we are synchronous we do it after not with onReadyStateChange\n\n        return this;\n    }\n\n    insertAfter(...toInsertParams: Array<DomQuery>): DomQuery {\n\n        let processed = [];\n\n        this.each(existingItem => {\n            let existingElement = existingItem.getAsElem(0).value;\n            let rootNode = existingElement.parentNode;\n            for (let cnt = 0; cnt < toInsertParams.length; cnt++) {\n                let nextSibling: Element = <any>existingElement.nextSibling;\n                toInsertParams[cnt].eachElem(insertElem => {\n                    if (nextSibling) {\n                        rootNode.insertBefore(insertElem, nextSibling);\n                        existingElement = nextSibling;\n                    } else {\n                        rootNode.appendChild(insertElem);\n                    }\n                });\n\n            }\n        });\n\n        let res = [];\n        res.push(this);\n        res.concat(toInsertParams);\n        return new DomQuery(...res);\n    }\n\n    insertBefore(...toInsertParams: Array<DomQuery>): DomQuery {\n        this.each(existingItem => {\n            let existingElement = existingItem.getAsElem(0).value;\n            let rootNode = existingElement.parentNode;\n            for (let cnt = 0; cnt < toInsertParams.length; cnt++) {\n                toInsertParams[cnt].eachElem(insertElem => {\n                    rootNode.insertBefore(insertElem, existingElement);\n                });\n            }\n        });\n        let res = [];\n        res.push(this);\n        res.concat(toInsertParams);\n        return new DomQuery(...res);\n    }\n\n    orElse(...elseValue: any): DomQuery {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            return new DomQuery(...elseValue);\n        }\n    }\n\n    orElseLazy(func: () => any): DomQuery {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            return new DomQuery(func());\n        }\n    }\n\n    parents(tagName: string): DomQuery {\n        const retSet: Set<Element> = new Set();\n        const retArr: Array<Element> = [];\n        const lowerTagName = tagName.toLowerCase();\n\n        let resolveItem = (item: Element) => {\n            if ((item.tagName || \"\").toLowerCase() == lowerTagName && !retSet.has(item)) {\n                retSet.add(item);\n                retArr.push(item);\n            }\n        };\n\n        this.eachElem((item: Element) => {\n            while (item.parentNode) {\n                item = <Element>item.parentNode;\n                resolveItem(item);\n                //nested forms not possible, performance shortcut\n                if (tagName == \"form\" && retArr.length) {\n                    return false;\n                }\n            }\n        });\n\n        return new DomQuery(...retArr);\n    }\n\n    copyAttrs(sourceItem: DomQuery | XMLQuery): DomQuery {\n        sourceItem.eachElem((sourceNode: Element) => {\n            let attrs: Array<Attr> = objToArray(sourceNode.attributes);\n            for (let item of attrs) {\n                let value: string = item.value;\n                let name: string = item.name;\n\n                switch (name) {\n                    case \"id\":\n                        this.id.value = value;\n                        break;\n                    case \"disabled\":\n                        this.resolveAttributeHolder(\"disabled\").disabled = value;\n                        break;\n                    case \"checked\":\n                        this.resolveAttributeHolder(\"checked\").checked = value;\n                        break;\n                    default:\n                        this.attr(name).value = value;\n                }\n            }\n        });\n        return this;\n    }\n\n    /**\n     * resolves an attribute holder compared\n     * @param attr\n     */\n    private resolveAttributeHolder(attrName: string = \"value\"): HTMLFormElement | any {\n        let ret = [];\n        ret[attrName] = null;\n        return (attrName in this.getAsElem(0).value) ?\n            this.getAsElem(0).value :\n            ret;\n    }\n\n    /**\n     * outerhtml convenience method\n     * browsers only support innerHTML but\n     * for instance for your jsf.js we have a full\n     * replace pattern which needs outerHTML processing\n     *\n     * @param markup\n     * @param runEmbeddedScripts\n     * @param runEmbeddedCss\n     */\n    outerHTML(markup: string, runEmbeddedScripts ?: boolean, runEmbeddedCss ?: boolean): DomQuery {\n        let nodes = DomQuery.fromMarkup(markup);\n        let res = [];\n        let toReplace = this.getAsElem(0).value;\n        let firstInsert = nodes.get(0);\n        let parentNode = toReplace.parentNode;\n        let replaced = firstInsert.getAsElem(0).value;\n        parentNode.replaceChild(replaced, toReplace);\n        res.push(new DomQuery(replaced));\n\n        let insertAdditionalItems = [];\n\n        for (let cnt = 1; cnt < nodes.length; cnt++) {\n            insertAdditionalItems.push(nodes.get(cnt));\n            this.rootNode.push(nodes.get(cnt).getAsElem(0).value);\n        }\n\n        res.push(DomQuery.byId(replaced).insertAfter(...insertAdditionalItems));\n\n        if (runEmbeddedScripts) {\n            this.runScripts();\n        }\n        if (runEmbeddedCss) {\n            this.runCss();\n        }\n\n        return new DomQuery(...res);\n    }\n\n    /**\n     * Run through the given nodes in the DomQuery execute the inline scripts\n     * @param whilteListed: optional whitelist function which can filter out script tags which are not processed\n     * defaults to the standard jsf.js exclusion (we use this code for myfaces)\n     */\n    runScripts(whilteListed: (val: string) => boolean = DEFAULT_JSF_WHITELIST): DomQuery {\n        let finalScripts = [],\n            equi = equalsIgnoreCase,\n            execScrpt = (item) => {\n                let tagName = item.tagName;\n                let itemType = item.type || \"\";\n                if (tagName && equi(tagName, \"script\") &&\n                    (itemType === \"\" || equi(itemType, \"text/javascript\") ||\n                        equi(itemType, \"javascript\") ||\n                        equi(itemType, \"text/ecmascript\") ||\n                        equi(itemType, \"ecmascript\"))) {\n                    let src = item.getAttribute('src');\n                    if ('undefined' != typeof src\n                        && null != src\n                        && src.length > 0\n                    ) {\n                        //we have to move this into an inner if because chrome otherwise chokes\n                        //due to changing the and order instead of relying on left to right\n                        //if jsf.js is already registered we do not replace it anymore\n                        if (whilteListed(src)) {\n                            if (finalScripts.length) {\n                                //script source means we have to eval the existing\n                                //scripts before running the include\n                                this.globalEval(finalScripts.join(\"\\n\"));\n\n                                finalScripts = [];\n                            }\n                            this.loadScriptEval(src, 0, \"UTF-8\");\n                        }\n\n                    } else {\n                        // embedded script auto eval\n                        //TODO this probably needs to be changed due to our new parsing structures\n                        //probably not needed anymore\n                        let evalText = trim(item.text || item.innerText || item.innerHTML);\n                        let go = true;\n\n                        while (go) {\n                            go = false;\n                            if (evalText.substring(0, 4) == \"<!--\") {\n                                evalText = evalText.substring(4);\n                                go = true;\n                            }\n                            if (evalText.substring(0, 4) == \"//<!--\") {\n                                evalText = evalText.substring(6);\n                                go = true;\n                            }\n                            if (evalText.substring(0, 11) == \"//<![CDATA[\") {\n                                evalText = evalText.substring(11);\n                                go = true;\n                            }\n                        }\n                        // we have to run the script under a global context\n                        //we store the script for less calls to eval\n                        finalScripts.push(evalText);\n\n                    }\n                }\n            };\n        try {\n            let scriptElements = this.querySelectorAll(\"script\");\n            if (scriptElements == null) return;\n            for (let cnt = 0; cnt < scriptElements.length; cnt++) {\n                execScrpt(scriptElements.getAsElem(cnt).value);\n            }\n            if (finalScripts.length) {\n                this.globalEval(finalScripts.join(\"\\n\"));\n            }\n        } catch (e) {\n            if (window.console && window.console.error) {\n                //not sure if we\n                //should use our standard\n                //error mechanisms here\n                //because in the head appendix\n                //method only a console\n                //error would be raised as well\n                console.error(e.message || e.description);\n            }\n        } finally {\n            //the usual ie6 fix code\n            //the IE6 garbage collector is broken\n            //nulling closures helps somewhat to reduce\n            //mem leaks, which are impossible to avoid\n            //at this browser\n            execScrpt = null;\n        }\n        return this;\n    }\n\n    runCss(): DomQuery {\n\n        const  applyStyle = (item: Element, style: string) => {\n                let newSS: HTMLStyleElement = document.createElement(\"style\");\n                document.getElementsByTagName(\"head\")[0].appendChild(newSS);\n\n                let styleSheet =  newSS.sheet ?? (<any>newSS).styleSheet;\n\n                newSS.setAttribute(\"rel\", item.getAttribute(\"rel\") ?? \"stylesheet\");\n                newSS.setAttribute(\"type\", item.getAttribute(\"type\") ?? \"text/css\");\n\n                if (styleSheet?.cssText ?? false) {\n                    styleSheet.cssText = style;\n                } else {\n                    newSS.appendChild(document.createTextNode(style));\n                }\n            },\n\n            execCss = (item: Element) => {\n                const tagName = item.tagName;\n                if (tagName && equalsIgnoreCase(tagName, \"link\") && equalsIgnoreCase(item.getAttribute(\"type\"), \"text/css\")) {\n                    applyStyle(item, \"@import url('\" + item.getAttribute(\"href\") + \"');\");\n                } else if (tagName && equalsIgnoreCase(tagName, \"style\") && equalsIgnoreCase(item.getAttribute(\"type\"), \"text/css\")) {\n                    let innerText = [];\n                    //compliant browsers know child nodes\n                    let childNodes: NodeList = item.childNodes;\n                    if (childNodes) {\n                        const len = childNodes.length;\n                        for (let cnt = 0; cnt < len; cnt++) {\n                            innerText.push((<Element>childNodes[cnt]).innerHTML || (<CharacterData>childNodes[cnt]).data);\n                        }\n                        //non compliant ones innerHTML\n                    } else if (item.innerHTML) {\n                        innerText.push(item.innerHTML);\n                    }\n\n                    applyStyle(item, innerText.join(\"\"));\n                }\n            };\n\n        const scriptElements: DomQuery = this.querySelectorAll(\"link, style\");\n        if (scriptElements == null) return;\n        for (let cnt = 0; cnt < scriptElements.length; cnt++) {\n            let element: any = scriptElements.getAsElem(cnt);\n            execCss(element.value);\n        }\n\n        return this;\n    }\n\n\n\n    /**\n     * fires a click event on the underlying dom elements\n     */\n    click(): DomQuery {\n        this.fireEvent(\"click\");\n        return this;\n    }\n\n    addEventListener(type: string, listener: (evt: Event) => void, options?: boolean | EventListenerOptions): DomQuery {\n        this.eachElem((node: Element) => {\n            node.addEventListener(type, listener, options);\n        });\n        return this;\n    }\n\n    removeEventListener(type: string, listener: (evt: Event) => void, options?: boolean | EventListenerOptions): DomQuery {\n        this.eachElem((node: Element) => {\n            node.removeEventListener(type, listener, options);\n        });\n        return this;\n    }\n\n    /**\n     * fires an event\n     */\n    fireEvent(eventName: string) {\n        this.eachElem((node: Element) => {\n            var doc;\n            if (node.ownerDocument) {\n                doc = node.ownerDocument;\n            } else if (node.nodeType == 9) {\n                // the node may be the document itself, nodeType 9 = DOCUMENT_NODE\n                doc = node;\n            } else {\n                throw new Error(\"Invalid node passed to fireEvent: \" + node.id);\n            }\n\n            if (node.dispatchEvent) {\n                // Gecko-style approach (now the standard) takes more work\n                var eventClass = \"\";\n\n                // Different events have different event classes.\n                // If this switch statement can't map an eventName to an eventClass,\n                // the event firing is going to fail.\n                switch (eventName) {\n                    case \"click\": // Dispatching of 'click' appears to not work correctly in Safari. Use 'mousedown' or 'mouseup' instead.\n                    case \"mousedown\":\n                    case \"mouseup\":\n                        eventClass = \"MouseEvents\";\n                        break;\n\n                    case \"focus\":\n                    case \"change\":\n                    case \"blur\":\n                    case \"select\":\n                        eventClass = \"HTMLEvents\";\n                        break;\n\n                    default:\n                        throw \"fireEvent: Couldn't find an event class for event '\" + eventName + \"'.\";\n                        break;\n                }\n                let event = doc.createEvent(eventClass);\n                event.initEvent(eventName, true, true); // All events created as bubbling and cancelable.\n\n                event.synthetic = true; // allow detection of synthetic events\n                // The second parameter says go ahead with the default action\n                node.dispatchEvent(event);\n            } else if ((<any>node).fireEvent) {\n                // IE-old school style, you can drop this if you don't need to support IE8 and lower\n                var event = doc.createEventObject();\n                event.synthetic = true; // allow detection of synthetic events\n                (<any>node).fireEvent(\"on\" + eventName, event);\n            }\n        })\n    }\n\n    textContent(joinstr: string = \"\"): string {\n        return this.stream\n            .map((value: DomQuery) => {\n                let item = value.getAsElem(0).orElseLazy(() => {\n                    return <any>{\n                        textContent: \"\"\n                    };\n                }).value;\n                return (<any>item).textContent || \"\";\n            })\n            .reduce((text1, text2) => text1 + joinstr + text2, \"\").value;\n    }\n\n    innerText(joinstr: string = \"\"): string {\n        return this.stream\n            .map((value: DomQuery) => {\n                let item = value.getAsElem(0).orElseLazy(() => {\n                    return <any>{\n                        innerText: \"\"\n                    };\n                }).value;\n                return (<any>item).innerText || \"\";\n            })\n            .reduce((text1, text2) => [text1, text2].join(joinstr), \"\").value;\n\n    }\n\n    /**\n     * encodes all input elements properly into respective\n     * config entries, this can be used\n     * for legacy systems, for newer usecases, use the\n     * HTML5 Form class which all newer browsers provide\n     *\n     * @param toMerge optional config which can be merged in\n     * @return a merged copy\n     *\n     * note the method can produce and consume two types a config or a map\n     * in both cases the output value matches the type of the input value\n     * if no input value is given a map is returned automatically\n     */\n    encodeFormElement(toMerge?: IConfig | {[key: string]: any}): IConfig | {[key: string]: any} {\n\n        //browser behavior no element name no encoding (normal submit fails in that case)\n        //https://issues.apache.org/jira/browse/MYFACES-2847\n        if (this.name.isAbsent()) {\n            return;\n        }\n\n        let isConfigurable = !! (<any>toMerge)?.prototype?.deepCopy;\n\n        //no value set we are going to initialize\n        //lets keep it sideffects free\n        let target: IValueHolder<any> = deepCopy(toMerge?.[\"value\"] ?? { value: {}});\n\n        this.each((element: DomQuery) => {\n            if (element.name.isAbsent()) {//no name, no encoding\n                return;\n            }\n            let name = element.name.value;\n            let tagName = element.tagName.orElse(\"__none__\").value.toLowerCase();\n            let elemType = element.type.orElse(\"__none__\").value.toLowerCase();\n\n            elemType = elemType.toLowerCase();\n\n            // routine for all elements\n            // rules:\n            // - process only inputs, textareas and selects\n            // - elements muest have attribute \"name\"\n            // - elements must not be disabled\n            if (((tagName == \"input\" || tagName == \"textarea\" || tagName == \"select\") &&\n                (name != null && name != \"\")) && !element.disabled) {\n\n                // routine for select elements\n                // rules:\n                // - if select-one and value-Attribute exist => \"name=value\"\n                // (also if value empty => \"name=\")\n                // - if select-one and value-Attribute don't exist =>\n                // \"name=DisplayValue\"\n                // - if select multi and multple selected => \"name=value1&name=value2\"\n                // - if select and selectedIndex=-1 don't submit\n                if (tagName == \"select\") {\n                    // selectedIndex must be >= 0 sein to be submittet\n                    let selectElem: HTMLSelectElement = <HTMLSelectElement>element.getAsElem(0).value;\n                    if (selectElem.selectedIndex >= 0) {\n                        let uLen = selectElem.options.length;\n                        for (let u = 0; u < uLen; u++) {\n                            // find all selected options\n                            //let subBuf = [];\n                            if (selectElem.options[u].selected) {\n                                let elementOption = selectElem.options[u];\n                                val(target, name).value = (elementOption.getAttribute(\"value\") != null) ?\n                                    elementOption.value : elementOption.text;\n                            }\n                        }\n                    }\n                }\n\n                // routine for remaining elements\n                // rules:\n                // - don't submit no selects (processed above), buttons, reset buttons, submit buttons,\n                // - submit checkboxes and radio inputs only if checked\n                if ((tagName != \"select\" && elemType != \"button\"\n                    && elemType != \"reset\" && elemType != \"submit\" && elemType != \"image\")\n                    && ((elemType != \"checkbox\" && elemType != \"radio\") || element.checked)) {\n                    let files: any = (<any>element.value).files;\n                    if (files && files.length) {\n                        //xhr level2\n                        val(target, name).value = files[0];\n                    } else {\n                        val(target, name).value = element.inputValue.value;\n                    }\n                }\n\n            }\n        });\n\n        return isConfigurable ? new (<any>toMerge)?.constructor(target) : target;\n\n    }\n\n    get cDATAAsString(): string {\n        let cDataBlock = [];\n        // response may contain several blocks\n        return this.stream\n            .flatMap(item => item.childNodes.stream).reduce((reduced: Array<any>, item: DomQuery) => {\n                reduced.push((<any>item?.value?.value)?.data ?? \"\");\n                return reduced;\n            }, []).value.join(\"\");\n\n    }\n\n\n    subNodes(from: number, to?: number): DomQuery {\n        if (Optional.fromNullable(to).isAbsent()) {\n            to = this.length;\n        }\n        return new DomQuery(...this.rootNode.slice(from, Math.min(to, this.length)));\n    }\n\n    _limits = -1;\n\n    limits(end: number): IStream<DomQuery> {\n        this._limits = end;\n        return <any>this;\n    }\n\n    //-- internally exposed methods needed for the interconnectivity\n    hasNext() {\n        let isLimitsReached = this._limits != -1 && this.pos >= this._limits - 1;\n        let isEndOfArray = this.pos >= this.values.length - 1;\n        return !(isLimitsReached ||\n            isEndOfArray);\n    }\n\n    next(): DomQuery {\n        if (!this.hasNext()) {\n            return null;\n        }\n        this.pos++;\n        return new DomQuery(this.values[this.pos]);\n    }\n\n    reset() {\n        this.pos = -1;\n    }\n}\n\n/**\n * Various collectors\n * which can be used in conjunction with Streams\n */\n\n/**\n * A collector which bundles a full dom query stream into a single dom query element\n *\n * This connects basically our stream back into DomQuery\n */\nexport class DomQueryCollector implements ICollector<DomQuery, DomQuery> {\n\n    data: DomQuery[] = [];\n\n    collect(element: DomQuery) {\n        this.data.push(element);\n    }\n\n    get finalValue(): DomQuery {\n        return new DomQuery(...this.data);\n    }\n}\n\n/**\n * abbreviation for DomQuery\n */\nexport const DQ = DomQuery;\nexport type DQ = DomQuery;\n","/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Lang} from \"./Lang\";\nimport {DomQuery} from \"./DomQuery\";\nimport isString = Lang.isString;\n\ndeclare let ActiveXObject: any;\n\n/**\n * xml query as specialized case for DomQuery\n */\nexport class XMLQuery extends DomQuery {\n\n    constructor(rootNode: Document | string | DomQuery, docType: SupportedType = \"text/xml\") {\n\n        let createIe11DomQueryShim = (): DOMParser => {\n            //at the time if wroting ie11 is the only relevant browser\n            //left withut any DomQuery support\n            let parser = new ActiveXObject(\"Microsoft.XMLDOM\");\n            parser.async = false;\n            //we shim th dom parser from ie in\n            return <any> {\n                parseFromString: (text: string, contentType: string): Document => {\n                    return parser.loadXML(text);\n                }\n            }\n        };\n\n        let parseXML = (xml: string): Document => {\n            if(xml == null) {\n                return null;\n            }\n            let domParser: DOMParser = Lang.saveResolveLazy<DOMParser>(\n                () => new window.DOMParser(),\n                (): DOMParser =>  createIe11DomQueryShim()\n            ).value;\n            return domParser.parseFromString(xml, docType);\n        };\n\n        if(isString(rootNode)) {\n            super(parseXML(<string>rootNode))\n        } else {\n            super(rootNode);\n        }\n    }\n\n\n    isXMLParserError(): boolean {\n        return this.querySelectorAll(\"parsererror\").isPresent();\n    }\n\n\n\n    toString(): string {\n        let ret = [];\n        this.eachElem((node: any) => {\n            if (typeof (<any>window).XMLSerializer != \"undefined\") {\n                ret.push(new (<any>window).XMLSerializer().serializeToString(node));\n            } else if (typeof node.xml != \"undefined\") {\n                ret.push(node.xml);\n            }\n        });\n        return ret.join(\"\");\n    }\n\n\n    parserErrorText(joinstr: string): string {\n        return this.querySelectorAll(\"parsererror\").textContent(joinstr);\n    }\n\n    static parseXML(txt: string): XMLQuery {\n        return new  XMLQuery(txt);\n    }\n    static parseHTML(txt: string): XMLQuery {\n        return new  XMLQuery(txt, \"text/html\");\n    }\n\n    static fromString(txt: string, parseType: SupportedType = \"text/xml\"): XMLQuery {\n        return new  XMLQuery(txt,parseType);\n    }\n}\n\nexport const XQ = XMLQuery;\nexport type XQ = XMLQuery;"],"sourceRoot":""}