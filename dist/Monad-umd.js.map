{"version":3,"sources":["../src/main/typescript/Monad.ts"],"names":[],"mappings":"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","file":"Monad-umd.js","sourcesContent":["/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A module which keeps  basic monadish like definitions in place without any sidedependencies to other modules.\n * Useful if you need the functions in another library to keep its dependencies down\n */\nexport module Monadish {\n    /*IMonad definitions*/\n\n    /**\n     * IFunctor interface,\n     * defines an interface which allows to map a functor\n     * via a first order function to another functor\n     */\n    export interface IFunctor<T> {\n        map<R>(fn: (data: T) => R): IFunctor<R>;\n    }\n\n    /**\n     * IMonad definition, basically a functor with a flaptmap implementation (flatmap reduces all nested monads after a\n     * function call f into a monad with the nesting level of 1\n     *\n     * flatmap flats nested Monads into a IMonad of the deepest nested implementation\n     */\n    export interface IMonad<T, M extends IMonad<any, any>> extends IFunctor<T> {\n        flatMap<T, M>(f: (T) => M): IMonad<any, any>;\n    }\n\n    /**\n     * a stateful functor which holds a value upn which a\n     * function can be applied\n     *\n     * as value holder of type T\n     */\n    export interface IIdentity<T> extends IFunctor<T> {\n        readonly value: T;\n    }\n\n    /**\n     *  custom value holder definition, since we are not pure functional\n     *  but iterative we have structures which allow the assignment of a value\n     *  also not all structures are sideffect free\n     */\n    export interface IValueHolder<T> {\n        value: T;\n    }\n\n    /**\n     * Implementation of a monad\n     * (Sideffect free), no write allowed directly on the monads\n     * value state\n     */\n    export class Monad<T> implements IMonad<T, Monad<any>> {\n        protected _value: T;\n\n        constructor(value: T) {\n            this._value = value;\n        }\n\n        map<R>(fn?: (data: T) => R): Monad<R> {\n            if (!fn) {\n                fn = (inval: any) => <R>inval;\n            }\n            let result: R = fn(this.value);\n            return new Monad(result);\n        }\n\n        flatMap<R>(fn?: (data: T) => R): Monad<any> {\n            let mapped: Monad<any> = this.map(fn);\n            while (\"undefined\" != typeof mapped && mapped != null && mapped.value instanceof Monad) {\n                mapped = mapped.value\n            }\n            return mapped;\n        }\n\n\n        get value(): T {\n            return this._value;\n        }\n\n    }\n\n\n    /**\n     * optional implementation, an optional is basically an implementation of a Monad with additional syntactic\n     * sugar on top\n     * (Sideeffect free, since value assignment is not allowed)\n     * */\n    export class Optional<T> extends Monad<T> {\n\n\n        constructor(value: T) {\n            super(value);\n        }\n\n        static fromNullable<T>(value?: T): Optional<T> {\n            return new Optional(value);\n        }\n\n        /*default value for absent*/\n        static absent = Optional.fromNullable(null);\n\n        /*syntactic sugar for absent and present checks*/\n        isAbsent(): boolean {\n            return \"undefined\" == typeof this.value || null == this.value;\n        }\n\n        isPresent(): boolean {\n            return !this.isAbsent();\n        }\n\n        presentOrElse(elseValue: any): Optional<any> {\n            if(this.isPresent()) {\n                return this;\n            } else {\n                return this.flatMap(this.getClass().fromNullable(elseValue));\n            }\n        }\n\n        /*\n         * we need to implement it to fullfill the contract, although it is used only internally\n         * all values are flattened when accessed anyway, so there is no need to call this methiod\n         */\n        flatMap<R>(fn?: (data: T) => R): Optional<any> {\n            var val = super.flatMap(fn);\n            if (!(val instanceof Optional)) {\n                return Optional.fromNullable(val.value);\n            }\n            return <Optional<any>> val.flatMap();\n        }\n\n        /**\n         * additional syntactic sugar which is not part of the usual optional implementation\n         * but makes life easier, if you want to sacrifice typesafety and refactoring\n         * capabilities in typescript\n         */\n        private getIfPresent<R>(key: string): Optional<R> {\n            if (this.isAbsent()) {\n                return this.getClass().absent;\n            }\n            return this.getClass().fromNullable(this.value[key]).flatMap();\n        }\n\n\n\n\n        /*\n         * elvis operation, take care, if you use this you lose typesafety and refactoring\n         * capabilites, unfortunately typesceript does not allow to have its own elvis operator\n         * this is some syntactic sugar however which is quite useful*/\n        getIf<R>(...key: string[]): Optional<R> {\n\n            let currentPos: Optional<any> = this;\n            for (let cnt = 0; cnt < key.length; cnt++) {\n                let currKey = this.keyVal(key[cnt]);\n                let arrPos = this.arrayIndex(key[cnt]);\n\n                if(currKey === \"\" && arrPos >= 0) {\n                    currentPos = this.getClass().fromNullable(!(currentPos.value instanceof Array ) ? null : (currentPos.value.length < arrPos ? null : currentPos.value[arrPos]));\n                    if (currentPos.isAbsent()) {\n                        return currentPos;\n                    }\n                    continue;\n                } else  if(currKey && arrPos >= 0) {\n                    if(currentPos.getIfPresent(currKey).isAbsent()) {\n                        return currentPos;\n                    }\n                    currentPos = (currentPos.getIfPresent(currKey).value instanceof Array) ? this.getClass().fromNullable(currentPos.getIfPresent(currKey).value[arrPos]) : this.getClass().absent;\n                    if (currentPos.isAbsent()) {\n                        return currentPos;\n                    }\n                    continue;\n\n                } else {\n                    currentPos = currentPos.getIfPresent(currKey);\n                }\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                } else if(arrPos > -1) {\n                    currentPos = this.getClass().fromNullable(currentPos.value[arrPos]);\n                }\n            }\n            let retVal = currentPos;\n\n            return retVal;\n        }\n\n        get value(): T {\n            if(this._value instanceof Monad) {\n                return this._value.flatMap().value\n            }\n            return this._value;\n        }\n\n        /**\n         * convenience function to flatmap the internal value\n         * and replace it with a default in case of being absent\n         *\n         * @param defaultVal\n         * @returns {Optional<any>}\n         */\n        get<R>(defaultVal: any): Optional<R> {\n            if(this.isAbsent()) {\n                return this.getClass().fromNullable(defaultVal).flatMap();\n            }\n\n            return this.getClass().fromNullable(this.value).flatMap();\n        }\n\n        /**\n         * helper to override several implementations in a more fluent way\n         * by having a getClass operation we can avoid direct calls into the constructor or\n         * static methods and do not have to implement several methods which rely on the type\n         * of \"this\"\n         * @returns {Monadish.Optional}\n         */\n        protected getClass(): any {\n            return Optional;\n        }\n\n        toJson():string {\n            return JSON.stringify(this.value);\n        }\n\n        /*helper method for getIf with array access aka <name>[<indexPos>]*/\n        protected arrayIndex(key: string): number {\n            let start = key.indexOf(\"[\");\n            let end = key.indexOf(\"]\");\n            if(start >= 0 && end > 0 && start < end) {\n                return parseInt(key.substring(start+1, end));\n            } else {\n                return -1;\n            }\n        }\n\n        /*helper method for getIf with array access aka <name>[<indexPos>]*/\n        protected keyVal(key: string): string {\n            let start = key.indexOf(\"[\");\n\n            if(start >= 0) {\n                return key.substring(0, start);\n            } else {\n                return key;\n            }\n        }\n\n\n    }\n\n\n    /**\n     * helper class to allow write access to the config\n     * in certain situations (after an apply call)\n     */\n    class ConfigEntry<T> implements IValueHolder<T>{\n        rootElem: any;\n        key: any;\n        arrPos: number;\n\n\n        constructor(rootElem: any, key: any, arrPos?:number) {\n            this.rootElem = rootElem;\n            this.key = key;\n            this.arrPos = (\"undefined\" != typeof arrPos) ? arrPos : -1;\n        }\n\n        get value() {\n            if(this.key == \"\" && this.arrPos >= 0) {\n                return this.rootElem[this.arrPos];\n            } else  if(this.key  && this.arrPos >= 0) {\n                return this.rootElem[this.key][this.arrPos];\n            }\n            return this.rootElem[this.key];\n        }\n\n        set value(val: T) {\n            if(this.key == \"\" && this.arrPos >= 0) {\n                this.rootElem[this.arrPos] = val;\n                return;\n            } else if(this.key && this.arrPos >= 0) {\n                this.rootElem[this.key][this.arrPos] = val;\n                return;\n            }\n            this.rootElem[this.key] = val;\n        }\n    }\n\n    /**\n     * Config, basically an optional wrapper for a json structure\n     * (not sideeffect free, since we can alter the internal config state\n     * without generating a new config), not sure if we should make it sideffect free\n     * since this would swallow a lot of performane and ram\n     */\n    export class Config extends Optional<any> {\n        constructor(root: any) {\n            super(root);\n        }\n\n        static fromNullable<T>(value?: any): Config {\n            return new Config(value);\n        }\n\n        apply(...keys: Array<any>): IValueHolder<any> {\n            if(keys.length < 1) {\n                return;\n            }\n\n            this.buildPath(keys);\n\n            let currKey = this.keyVal(keys[keys.length-1]);\n            let arrPos = this.arrayIndex(keys[keys.length-1]);\n            var retVal = new ConfigEntry(keys.length == 1 ? this.value : this.getIf.apply(this, keys.slice(0, keys.length -1)).value,\n                currKey, arrPos\n            );\n\n            return retVal;\n        }\n\n\n        getIf(...keys: Array<string>): Config {\n            return this.getClass().fromNullable(super.getIf.apply(this, keys).value);\n        }\n\n        get(defaultVal: any): Config {\n            return this.getClass().fromNullable(super.get(defaultVal).value);\n        }\n\n        toJson(): any {\n            return JSON.stringify(this.value);\n        }\n\n        protected getClass(): any {\n            return Config;\n        }\n\n        private setVal(val: any) {\n            this._value = val;\n        }\n\n        private buildPath(keys: Array<any>): Config {\n            let val = this;\n            let parentVal = this.getClass().fromNullable(null);\n            let parentPos = -1;\n            let alloc = function(arr: Array<any>, length: number) {\n                if(arr.length < length) {\n                    for(var cnt = arr.length; cnt < length; cnt++) {\n                        arr.push({});\n                    }\n                }\n            };\n\n\n            for(var cnt = 0; cnt < keys.length; cnt++) {\n                let currKey = this.keyVal(keys[cnt]);\n                let arrPos = this.arrayIndex(keys[cnt]);\n\n                if(currKey === \"\" && arrPos >= 0) {\n\n                    val.setVal((val.value instanceof Array) ? val.value : []);\n                    alloc(val.value, arrPos+1);\n                    if(parentPos >= 0) {\n                        parentVal.value[parentPos] = val.value;\n                    }\n                    parentVal = val;\n                    parentPos = arrPos;\n                    val = this.getClass().fromNullable(val.value[arrPos]);\n                    continue;\n                }\n\n                let tempVal = <Config> val.getIf(currKey);\n                if(arrPos == -1) {\n                    if(tempVal.isAbsent()) {\n                        tempVal = <Config> this.getClass().fromNullable(val.value[currKey] = {});\n                    } else {\n                        val = <any>tempVal;\n                    }\n                } else {\n                    var arr = (tempVal.value instanceof Array) ? tempVal.value : [];\n                    alloc(arr, arrPos+1);\n                    val.value[currKey] = arr;\n                    tempVal = this.getClass().fromNullable(arr[arrPos]);\n                }\n                parentVal = val;\n                parentPos = arrPos;\n                val = <any>tempVal;\n            }\n\n            return this;\n        }\n    }\n\n\n    enum PromiseStatus {\n        PENDING, FULLFILLED, REJECTED\n    }\n\n    export interface IPromise {\n        then(executorFunc: (val: any) => any): IPromise;\n        catch(executorFunc: (val: any) => any): IPromise\n        finally(executorFunc: () => void): IPromise;\n\n    }\n\n    /**\n     * a small (probably not 100% correct, although I tried to be correct as possible) Promise implementation\n     * for systems which do not have a promise implemented\n     * Note, although an internal state is kept, this is sideffect free since\n     * is value is a function to operate on, hence no real state is kept internally, except for the then\n     * and catch calling order\n     */\n    export class Promise implements IPromise {\n\n        private value: (resolve: (val?: any) => void, reject: (val?: any) => void) => void;\n\n        protected status = PromiseStatus.PENDING;\n\n        protected allFuncs: Array<any> = [];\n\n        constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void) => void) {\n            //super(executor);\n            this.value = executor;\n            this.value((data: any) => this.resolve(data), (data: any) => this.reject(data));\n        }\n\n        static all(...promises: Array<IPromise>): IPromise {\n\n            var promiseCnt = 0;\n            var myapply: Function;\n\n            var myPromise = new Promise((apply: Function, reject: Function) => {\n                myapply = apply;\n            });\n            var executor = () => {\n                promiseCnt++;\n\n                if (promises.length == promiseCnt) {\n                    myapply();\n                }\n            };\n            (<any>executor).__last__ = true;\n\n            for (var cnt = 0; cnt < promises.length; cnt++) {\n                promises[cnt].finally(executor);\n            }\n            return myPromise;\n        }\n\n\n        static race(...promises: Array<IPromise>): IPromise {\n\n            var promiseCnt = 0;\n            var myapply: Function;\n            var myreject: Function;\n\n            var myPromise = new Promise((apply: Function, reject: Function) => {\n                myapply = apply;\n                myreject = reject;\n            });\n\n\n            var thenexecutor = (): IPromise => {\n                if (!!myapply) {\n                    myapply();\n                }\n                myapply = null;\n                myreject = null;\n                return null;\n            };\n            (<any>thenexecutor).__last__ = true;\n\n            var catchexeutor = (): IPromise => {\n                if (!!myreject) {\n                    myreject();\n                }\n                myreject = null;\n                myapply = null;\n                return null;\n            };\n            (<any>catchexeutor).__last__ = true;\n\n            for (var cnt = 0; cnt < promises.length; cnt++) {\n                promises[cnt].then(thenexecutor);\n                promises[cnt].catch(catchexeutor);\n            }\n            return myPromise;\n        }\n\n        static reject(reason: any): Promise {\n            var retVal = new Promise((resolve: any, reject: any) => {\n                //not really doable without a hack\n                if (reason instanceof Promise) {\n                    reason.then((val: any) => {\n                        reject(val);\n                    });\n                } else {\n                    setTimeout(() => {\n                        reject(reason);\n                    }, 1);\n                }\n            });\n\n            return retVal;\n        }\n\n        static resolve(reason: any): Promise {\n            var retVal = new Promise((resolve: any, reject: any) => {\n                //not really doable without a hack\n                if (reason instanceof Promise) {\n                    reason.then((val) => resolve(val));\n                } else {\n                    setTimeout(() => {\n                        resolve(reason);\n                    }, 1);\n                }\n            });\n\n            return retVal;\n\n        }\n\n        then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): Promise {\n            this.allFuncs.push({\"then\": executorFunc});\n            if (catchfunc) {\n                this.allFuncs.push({\"catch\": catchfunc});\n            }\n            this.spliceLastFuncs();\n            return this;\n        }\n\n        catch(executorFunc: (val?: any) => void): Promise {\n            this.allFuncs.push({\"catch\": executorFunc});\n            this.spliceLastFuncs();\n            return this;\n        }\n\n\n        finally(executorFunc: () => void): Promise {\n            if ((<any>this).__reason__) {\n                (<any>this).__reason__.finally(executorFunc);\n                return;\n            }\n\n            this.allFuncs.push({\"finally\": executorFunc});\n            this.spliceLastFuncs();\n            return this;\n        }\n\n        private spliceLastFuncs() {\n            let lastFuncs = [];\n            let rest = [];\n            for (var cnt = 0; cnt < this.allFuncs.length; cnt++) {\n                for (var key in this.allFuncs[cnt]) {\n                    if (this.allFuncs[cnt][key].__last__) {\n                        lastFuncs.push(this.allFuncs[cnt]);\n                    } else {\n                        rest.push(this.allFuncs[cnt]);\n                    }\n                }\n            }\n            this.allFuncs = rest.concat(lastFuncs);\n        }\n\n\n        protected resolve(val?: any) {\n\n\n            while (this.allFuncs.length) {\n                if (!this.allFuncs[0].then) {\n                    break;\n                }\n                var fn = this.allFuncs.shift();\n\n                var funcResult = Optional.fromNullable(fn.then(val));\n\n                if (funcResult.isPresent()) {\n                    funcResult = funcResult.flatMap();\n                    val = funcResult.value;\n                    if (val instanceof Promise) {\n                        //var func = (newVal: any) => {this.resolve(newVal)};\n                        //func.__last__  = true;\n                        //val.then(func);\n                        this.transferIntoNewPromise(val);\n\n                        return;\n                    }\n                } else {\n                    break;\n                }\n            }\n\n            this.appyFinally();\n            this.status = PromiseStatus.FULLFILLED;\n        }\n\n        protected reject(val?: any) {\n\n            while (this.allFuncs.length) {\n                if (this.allFuncs[0].finally) {\n                    break;\n                }\n                var fn = this.allFuncs.shift();\n                if (fn.catch) {\n                    var funcResult = Optional.fromNullable(fn.catch(val));\n                    if (funcResult.isPresent()) {\n                        funcResult = funcResult.flatMap();\n                        val = funcResult.value;\n                        if (val instanceof Promise) {\n                            //val.then((newVal: any) => {this.resolve(newVal)});\n                            this.transferIntoNewPromise(val);\n                            return;\n                        }\n                        this.status = PromiseStatus.REJECTED;\n                        break;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            this.status = PromiseStatus.REJECTED;\n            this.appyFinally();\n        }\n\n        private transferIntoNewPromise(val: any) {\n            for (var cnt = 0; cnt < this.allFuncs.length; cnt++) {\n                for (let key in this.allFuncs[cnt]) {\n                    val[key](this.allFuncs[cnt][key]);\n                }\n            }\n        }\n\n        protected appyFinally() {\n            while (this.allFuncs.length) {\n                var fn = this.allFuncs.shift();\n                if (fn.finally) {\n                    fn.finally();\n                }\n            }\n        }\n    }\n\n    /**\n     * a cancellable promise\n     * a Promise with a cancel function, which can be cancellend any time\n     * this is useful for promises which use cancellable asynchronous operations\n     * note, even in a cancel state, the finally of the promise is executed, however\n     * subsequent thens are not anymore.\n     * The current then however is fished or a catch is called depending on how the outer\n     * operation reacts to a cancel order.\n     */\n    export class CancellablePromise extends Promise {\n\n        private cancellator = () => {};\n\n        /**\n         * @param executor asynchronous callback operation which triggers the callback\n         * @param cancellator cancel operation, separate from the trigger operation\n         */\n        constructor(executor: (resolve: (val?: any) => void, reject: (val?: any) => void)  => void, cancellator:() => void) {\n            super(executor);\n            this.cancellator = cancellator;\n        }\n\n        cancel() {\n            this.status = PromiseStatus.REJECTED;\n            this.appyFinally();\n            //lets terminate it once and for all, the finally has been applied\n            this.allFuncs = [];\n        }\n\n\n        then(executorFunc: (val?: any) => any, catchfunc?: (val?: any) => any): CancellablePromise {\n            return <CancellablePromise> super.then(executorFunc, catchfunc);\n        }\n\n        catch(executorFunc: (val?: any) => void): CancellablePromise {\n            return <CancellablePromise> super.catch(executorFunc);\n        }\n\n        finally(executorFunc: () => void): CancellablePromise {\n            return <CancellablePromise> super.finally(executorFunc);\n        }\n    }\n    /*we do not implenent array, maps etc.. monads there are libraries like lodash which have been doing that for ages*/\n}\n\n//we also add a global handler for systems without module loader\n(<any>window).Monadish = Monadish;"]}